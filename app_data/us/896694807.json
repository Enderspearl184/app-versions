[{"version_id":"812958769","version_name":"1.9","version_date":"","version_description":""},{"version_id":"815578751","version_name":"2.4","version_date":"","version_description":""},{"version_id":"815815254","version_name":"2.5","version_date":"2016-01-11 18:59:17.000 +0800","version_description":"I have had many requests for improved editing in the last year and I finally caved in. The built-in editor now does syntax highlighting for HTML, Javascript, Ruby, Swift, R, Erlang and 32 other languages. \n\nThe internal editor lets you search the contents of your file and quickly jump between search results. To search using regular expressions, just wrap your /query/ in slashes.\n\nThere is no longer any need for the read-only source-code viewer that previously handled syntax highlighting. Start editing by tapping somewhere in your file.\n\nWorking Copy includes a color-picker that lets you create or modify colors right in your HTML and CSS files. If you select text representing a valid CSS color your can modify it, and if the caret is placed where a CSS color is expected, you can easily insert a new color either as RGB or HLS with or without alpha. \n\nIf you have Dash installed the editor will let you lookup documentation for your current selection. \n\nSelected text can also be processed with action extensions, letting you transform text with apps such as Workflow. Results from these action extensions are put back into your text selection. \n\nThere are still situations where a stand-alone editing app will serve you well. If you want a great text editor that lets you navigate the structure of your source-file and let you insert snippets of code, check out Textastic that works very well with Working Copy. If you need distraction free markdown editing then Byword is a good choice.\n\nYou can move and rename files using x-callback-url/move.\n\nFixed bug where merge-commit after conflict resolution did not work.\n\nThere has also been some smaller bug-fixes and improvements.\n\nI know some users where expecting Submodule support for this release, but it needed extra work. My apologies for this delay."},{"version_id":"816168424","version_name":"2.6","version_date":"2016-01-23 23:37:31.000 +0800","version_description":"Corrected problem making commits to repository without any previous commits. This made repositories initialised inside Working Copy useless.\n\nFixed crash that could happen when asked for password during a push to remote.\n\nWhen looking at file differences or commit change-sets, individual words added and removed are highlighted with extra emphasis.\n\nExport zip files for entire repository content or sub-directories.\n\nComments in SSH Keys are prominently shown and can be edited. This should make things easier for users with many keys.\n\nExport repository to Codea Project format when installed on device.\n\nRevert to old version in a non-destructive way with “Commit to Head” operation on commits.\n\nLots of smaller improvements and fixes."},{"version_id":"816506469","version_name":"2.7","version_date":"2016-03-04 06:23:57.000 +0800","version_description":"Support for Submodules. They start out empty and you swipe to Clone them and Purge them back to empty. It is not yet possible to change your submodule configuration inside the app.\n\nBeanstalk integration: Enter your hostname as account-name.beanstalkapp.com in the Hosting Provider settings and your Beanstalk repositories are listed when cloning.\n\nWhen editing on iPad there is tabulator-button and colorpicker in the shortcuts bar above the keyboard. \n\nMarkdown preview supports :emoji: and ~~strikethrough~~.\n\nToggle spellchecking for different file-types in the dropdown that also toggles line-numbers. Default is for spellcheck to be enabled for Markdown + plain text.\n\nSyntax highlighting for VBScript / RhinoScript. \n\nFile and Zip export works with Pythonista action extension.\n\nUse wildcards in x-callback-url/pull and x-callback-url/push letting you specify repo=* or repo=*github.com* to pull from or push to multiple repositories.\n\nPerformance improvements for large repositories. \n\nLots of smaller improvements and fixes."},{"version_id":"817695588","version_name":"2.8","version_date":"2016-06-12 08:05:46.000 +0800","version_description":"Merge conflicts is the most frustrating part of working with Git on any platform. \n\nWorking Copy introduces a resolve-tool reimagined for touch screens that lets you fix merge conflicts by picking chunks of text or tapping the version of a binary file you want. Your entire repository can be resolved in one step without fiddling with conflict markers for safer and faster merging.\n\nEditor has a built-in image picker on iPad. When cursor is on HTML or CSS image reference, a thumbnail is shown on the shortcuts bar and you can tap to pick images from repository.\n\nChanges tab works for PDF files, Word documents and many other binary files. View the two versions side by side or partitioned by a line.\n\nImprovements to editor stability.\n\nBetter encoding detection that will turn to HTML, XML or LaTeX headers for guidance.\n\nSyntax highlighting for Elixir and R.\n\nMany smaller improvements and fixes."},{"version_id":"817815362","version_name":"2.8.2","version_date":"2016-06-18 20:16:54.000 +0800","version_description":"I made a submission error for this update, such that the planned improvements described below are not actually included. \nI apologise for this and will work to fix this as soon as possible.\n------------------------\n\nImprovements to Document Picker to work better when picking directories or documents that package directories.\n\nShare extension (Save in Working Copy) is smarter about saving directories, packaged directories and zip files containing directories.\n\nResolve tool lets you use all chunks from one version discarding the ones from other version by tapping branch name in the filename header. You can also toggle between accepting or rejecting a text chunk by tapping. To make chunk state undecided you still need to swipe.\n\nSyntax highlighting for Fortran. \n\nSupport for larger text when editing.\n\nSome smaller improvements and fixes."},{"version_id":"817830686","version_name":"2.8.3","version_date":"2016-06-21 15:53:24.000 +0800","version_description":"Improvements to Document Picker to work better when picking directories or documents that package directories.\n\nShare extension (Save in Working Copy) is smarter about saving directories, packaged directories and zip files containing directories.\n\nResolve tool lets you use all chunks from one version discarding the ones from other version by tapping branch name in the filename header. You can also toggle between accepting or rejecting a text chunk by tapping. To make chunk state undecided you still need to swipe.\n\nSyntax highlighting for Fortran. \n\nSupport for larger text when editing.\n\nSome smaller improvements and fixes."},{"version_id":"818008638","version_name":"2.8.4","version_date":"2016-07-07 19:10:08.000 +0800","version_description":"Cherry-pick to apply the changes made by previous commit on your current branch. Conflicts caused by this can be fixed with the merge tool.\n\nImproved sharing of commits through Email or Messages with attached patch file.\n\nReadonly mode when you want to read code and the keyboard is in the way. Toggle this where you switch editor mode for your files.\n\nIf you are using a external keyboard, there is a bunch of new shortcuts at your disposal. Hold down Cmd for details.\n\nExpanded x-callback-url support that lets you checkout and merge branches or lets you chain together multiple commands. There is a link to the documentation from the settings inside the app.\n\nMany smaller improvements and fixes."},{"version_id":"818166634","version_name":"2.8.6","version_date":"2016-07-21 05:50:29.000 +0800","version_description":"Use Handoff to send files and their changes between iOS devices. If you do not have the repository on the target device, you will get the chance to clone it first and the edits you made are available. \n\nWhen merging branches you are shown which branches can be fast-forwarded, which ones require a regular merge and which branches do not need merging. \n\nPreview OPML files.\n\nLots of smaller improvements and fixes."},{"version_id":"818520699","version_name":"2.8.8","version_date":"2016-08-17 20:31:15.000 +0800","version_description":"Move files and directories by dragging them around in the list of files. Let the dragged item float on the right side of directory entries to enter these, or above the back-button in the upper-left corner to step out. \n\nRepository and directory listings use Dynamic Type to adjust text size to your preferred settings.\n\nCommit+Push is smarter when you have multiple remotes and will push to the remote that is the least behind. \n\nYour location when reading documents in remembered and restored if you switch away from and back to Working Copy, even under low-memory conditions.\n\nFor GitHub, BitBucket, Gogs and GitLab repositories you can switch between ssh and https url's at the remote detail screen.\n\nImproved x-callback-url handling when Working Copy was not running before the callback is made.\n\nImproved rendering of commit graph.\n\nMany smaller improvements and fixes."},{"version_id":"818743148","version_name":"2.9.0","version_date":"2016-10-10 14:25:55.000 +0800","version_description":"Branch handling has been massively improved with the ability to rebase commits from other branches into your current branch to avoid merge commits. You will be allowed to rewrite commits (during rebase) that have not yet been pushed to a remote, or individual branches can be configured to allow history rewriting even after commits have been pushed to a remote. When branches are configured for history rewriting it will be force-pushed to the remote, which is something you should never do without making sure no-one else is doing work on the same branch.\n\nWhen deleting branches you will be prompted about commits that haven’t been pushed or merged yet and from the list of branches you can push, such that it is now possible to push non-current branches.\n\nSettings page has a gallery of apps that work well with Working Copy with tips, tricks and workflows. If you have read through the Users’ guide this might be old news, but I hope it becomes clear for everyone how much more powerful Working Copy is, when combined with other apps.\n\nFaster loading of repositories on startup. The app is ready for use almost immediately.\n\nSupport for Taptic feedback on iPhone 7.\n\nYou can export the private part of Secure Shell keys.\n\nWorking Copy is smarter about displaying small images and will zoom to fit available space with a nearest-neighbour filtering such that individual pixels are crisp and without blurring. \n\nConsole log shows where log statements are made in the code and you can tap to jump to location in local source file. Exceptions in the log have supported this all along.\n\nSyntax highlighting for Prolog.\n\nWhen device is configured for “Reduced Motion” animations and transitions are kept at a minimum.\n\nFixed bug where selecting text when looking at files in readonly mode would scroll to the top of the file.\n\nLots of smaller improvements and fixes."},{"version_id":"819284783","version_name":"2.9.1","version_date":"2016-10-20 18:27:12.000 +0800","version_description":"Added the ability to Commit/Revert and Fetch/Merge/Push from the branch picker dropdown at the top of directory listings.\n\nRebase was unable to complete in some situations. Reliability has been improved and progress is shown while rebasing.\n\nWhen you rename local branches that track a remote branch, they will continue to track the remote branch by the previous name. This makes it easier to handle situations where a single local branch should be pushed to different branches on different remotes.\n\nSyntax highlighting for D.\n\nLots of smaller improvements and fixes."},{"version_id":"819425866","version_name":"2.9.2","version_date":"2016-11-07 06:10:43.000 +0800","version_description":"Try out the push unlock for 10 days without paying. \n\nThe permanent push unlock is still available for users that have purchased this and can be purchased by new users when the trial ends. \n\nAvatar images for commits can be read from device Contacts. You enable this from Identity settings and they take precedence over Gravatar images. If you disable both Contacts and Gravatar the avatar image will be made from initials.\n\nSome small improvements and fixes."},{"version_id":"819798959","version_name":"2.9.3","version_date":"2016-11-23 06:37:42.000 +0800","version_description":"When merging from the branch list, you can control whether fast-forward merges are allowed.\n\nHTML preview mode has been massively improved. \n\nIt still works when offline as long as scripts and assets are available in the repository and it still has a Javascript console for errors and log statements. But it is much faster, works with video files and supports external preview where you can access from a remote browser. With Handoff and Bonjour it is easy to connect from your Mac or other iOS device.\n\nPreview mode now supports the WebStorage API letting you persist values in a JSON file inside your repository and the javascript popup boxes (alert, confirm and prompt) are supported but can be muted.\n\nA nasty bug has been fixed where filenames with precomposed characters sometimes caused files to appear modified when they were not.\n\nOpening files is much faster.\n\nFixed problem where deleting reposiories took too long.\n\nSome smaller improvements and fixes."},{"version_id":"820368515","version_name":"2.9.5","version_date":"2017-01-06 05:41:23.000 +0800","version_description":"When creating new branches inside Working Copy, the remote tracking branch was sometimes misconfigured. This has been corrected.\n\nFixed a bug where editor did not reload current document if there was changes from elsewhere, either changes from reverting or merging the repository or from external edits through the document picker.\n\nPreview of html files also refreshes when there are changes, not just changes to the html file itself, but images, stylesheets and other dependencies. Once reload completes your zoom and scroll settings will be restored. This is ideal on iPads in Split View mode with a external editor such as Textastic next to the Working Copy preview.\n\nWhen line numbers are enabled in internal editor, you can quickly scroll through files by holding and dragging the line number bar. A miniature strip of your file is shown to the right and letting go of your finger inside the line number indicator lets you type the number to jump to. This makes it easier to navigate large files on a small display.\n\nTabulator key will insert space or tabulator adapting to existing file content. If the file has a Emacs header on the form\n   -*- mode: tab-width: 4; -*- \nthis takes precedence over whitespace frequency analysis.\n\nSyntax highlighting added for Kotlin, MatLab, TypeScript + PowerShell and headlines and links are properly highlighted in Markdown files.\n\nMarkdown preview upgraded to use MultiMarkdown 5.0 with much better highlighting for source code inside markdown files.\n\nEmoji used in commit messages are converted to slack-style codes to work better on all platforms. Slack-style emoji codes are converted back to emoji when showing commit messages.\n\nImproved updating of behind/ahead status when there are multiple remotes for a repository. \n\nConfigure a fixed SSH key to use for individual remotes. This can be useful for special remotes such as Gerrit, that kill connections with too many failed authentication attempts.\n\nImprovements to SSH Key import and export.\n\nLots of other smaller improvements."},{"version_id":"820618148","version_name":"2.9.6","version_date":"2017-02-02 07:44:11.000 +0800","version_description":"Working Copy 2.9.6 adds a predictive keyboard for commit messages. \n\nLooking through 175,283,738 commits spanning 570 million lines, the 10 thousand most frequent words have been picked along with their context. If you type “pu” you probably want to complete with “pull” and “request” is a likely next word.\n\nPredictions are not only guided by what other people have been writing. Latest commit messages from the repository are used as well as the filenames and changes you are about to commit.\n\nYou are shown the number of characters used in the first summary line of your commit message. You can still break the 50 character limit if you want to, but it will be a conscious decision.\n\nThe workflow sending files back and forth from Editorial has been improved to no longer change your clipboard contents. If you use Editorial, you should make sure you are running the latest version, delete the old Working Copy workflow inside Editorial and the new workflow will be installed the next time you send a file to Editorial.\n\nRead the repository history in custom workflows, using x-callback-url/log to list commits: \n https://workingcopyapp.com/url-schemes.html#log\n\nLots of smaller improvements and fixes."},{"version_id":"820888722","version_name":"2.9.7","version_date":"2017-02-13 21:52:55.000 +0800","version_description":"Working Copy 2.9.7 lets you make changes to your latest commit and has the ability to use regular SSH servers as Git hosting providers.\n\nSometimes you regret a commit and want to fix a typo or split the commit in smaller parts. This is possible as you can now Undo your latest commit by swiping left on the commit list of your repository. \n\nThe changes recorded by the commit are not removed and Working Copy remembers you commit message, such that you can commit again with proper spelling or a subset of the modified files with very little hassle.\n\nCommit Undo is only possible for the latest commit and only before being pushed to the remote, but as you remove the latest commit by undoing, you can undo another and another letting you squash several commits into one. \n\nConfigure your SSH server as a Hosting Provider. Existing repositories can be listed and new ones created from within Working Copy by running secure shell commands. \n\nThis release also has some adjustments to markdown rendering."},{"version_id":"821262191","version_name":"2.9.8","version_date":"2017-03-10 13:25:22.000 +0800","version_description":"I have had requests for this feature for a long time, and now it's finally possible to sort and filter directory listings. \n\nPull down the listing and to the left of the search field you enable filtering while sorting is controlled to the right. You can filter to only see Current, Conflicted, Modified or Ignored files and you can sort by Change time, Filename, Kind of file, Size of file and Status of file.\n\nDelete remote branches either from the list of branches or the detail screen for the branch. \n\nBetter handling of very large files and overall performance improvements in editor.\n\nSyntax highlighting for Windows batch files.\n\nCommit lists show branch heads in a way similar to the commit graph, making it easier to determine what has been pushed or not yet merged.\n\nLots of smaller improvements and fixes."},{"version_id":"821359629","version_name":"2.9.9","version_date":"2017-03-17 18:30:32.000 +0800","version_description":"version 2.9.9\n-------------\nProgress indicator when switching between branches. \n\nCompatibility fixes for future versions of iOS.\n\nversion 2.9.8\n-------------\nI have had requests for this feature for a long time, and now it's finally possible to sort and filter directory listings. \n\nPull down the listing and to the left of the search field you enable filtering while sorting is controlled to the right. You can filter to only see Current, Conflicted, Modified or Ignored files and you can sort by Change time, Filename, Kind of file, Size of file and Status of file.\n\nDelete remote branches either from the list of branches or the detail screen for the branch. \n\nBetter handling of very large files and overall performance improvements in editor.\n\nSyntax highlighting for Windows batch files.\n\nCommit lists show branch heads in a way similar to the commit graph, making it easier to determine what has been pushed or not yet merged.\n\nLots of smaller improvements and fixes."},{"version_id":"821934606","version_name":"3.0.0","version_date":"2017-06-01 09:58:10.000 +0800","version_description":"This update is a big one finally delivering the much requested dark mode, with fuzzy searching of filenames or symbols for quick navigation and a gorgeous icon by the talented Michael Flarup. \n\nYou enable the dark mode at the top of the settings screen and this also changes the color of the app icon, but dark mode is available exclusively for users with the push unlock. Revenue from your unlock will fund future features. If you have the enterprise app installed, the icon is used to tell them apart and will not change when you switch between light and dark mode.\n\nFuzzy search will look through all filenames in the repository. For many languages Working Copy can spot symbol declarations letting you fuzzy search these as well, but all text is indexed supporting fast non-fuzzy search across your repository. This makes it easy to lookup files or declarations and to find out everywhere a symbol is used.\n\nIf you type several search words, they will match filenames first and then symbols or regular text. When your query matches a filename and ends with a number, the search result takes you to that line number. If you edit files with the built-in editor or with another app such as Textastic the active search will update automatically.\n\nWhen you do not search for anything while editing, the recently viewed files and edit points are listed for quick back and forth navigation. This is why the search button in the editor has a tab-like look.\n\nEditor lets you disable wordwrap, adds syntax highlighting for Groovy and Embedded Ruby and improves highlighting for the existing 50 languages.\n\nLinux or BSD servers running Gitolite are supported as hosting providers.\n\nFixed bug where commit autocompletion was not available for the second longer description part of the commit message on iPad.\n\nYou can Undo the latest commit, but sometimes Working Copy did not properly remember which Undo was the latest. This has been corrected.\n\nImprovements to patches exported from commits with the share sheet.\n\nImproved efficiency when doing filename or diff content search in commit graph.\n\nLots of smaller improvements.\n\nI am still working on improving behaviour with unicode filename normalization that has changed on 64-bit devices running iOS 10.3, but my current changes are not ready to be published yet. It is my top priority for the next update.\n\nEveryone emailing me with suggestions for improvements and bug reports make this app much better. Thank you."},{"version_id":"822552515","version_name":"3.0.0 had lots of new features","version_date":"","version_description":""},{"version_id":"822552515","version_name":"3.0.2","version_date":"2017-06-21 05:08:33.000 +0800","version_description":"Working Copy 3.0.0 was a major step forward in features with a dark mode and repository-wide fuzzy search. This release is all about refinement.\n\nThere have been improvements to filename handling such that the problems with unicode filename normalisation that started with iOS 10.3 is fixed. \n\nThere is a new \"Clone in Working Copy\" action in share sheets for URL's making it easier to clone a repository from Safari or a link. For URL's on GitHub, BitBucket or GitLab pointing to a specific file, branch or commit, Working Copy jumps to the relevant screen cloning first as needed. You enable the action from the bottom grey list of actions on a share sheet by tapping More.\n\nStrictly speaking this is not a new feature, as you could previously install a workflow letting you do this, but many users never discovered it. On that note you should check out the App Integrations screen inside settings. Working Copy has rich automation features not only letting you control what the app does, but also letting you activate custom workflows from within Working Copy that acts on repositories and their files, branches and commits. Developers often have very specialised requirements and in situations where you would write a shell script on a regular computer, you can perhaps use Workflow or Pythonista on iOS.\n\nRepository-wide search requires indexing to complete before a file can be found. This could be annoying when indexing hadn't yet reached the current file such that local search was unavailable. Now the current file is searched without index, making it instantly ready and allowing matches inside words as well as regular expression matching with a query on the form:\n  /regexp/ \n\nFurthermore the order of the search results is much better at bringing the relevant search results to the top.\n\nThe dark mode has been refined in all corners of the app to look better and more consistent.\n\nWhen directory listing is sorted by filename any numbers at the end is ordered numerically.\n\nLots of smaller improvements and fixes."},{"version_id":"822678584","version_name":"3.0.3","version_date":"2017-06-27 13:28:32.000 +0800","version_description":"Version 3.0.0 had lots of new features, 3.0.2 had important fixes and refinements and now 3.0.3 brings another set of refinements to get everything just right.\n\nFix crash that could happen right after cloning a Submodule. \n\nSupport for CMake syntax highlighting.\n\nList the branches for a repository with the x-callback-url/branches command. A list of all commands is available at:\n   https://workingcopyapp.com/url-schemes.html#x-callback-url\n\nFaster opening of files from directory listing.\n\nBetter handling of symbolic links that are shown with a new icon and will show the content of their target when viewed.\n\nA few other smaller improvements.\n\nThank you for emailing me with feature requests and bug reports. This makes the app much better."},{"version_id":"822860833","version_name":"3.0.5","version_date":"2017-07-14 05:17:19.000 +0800","version_description":"While I'm brewing on exciting new features, it is time for yet another maintenance update.\n\nThe only new feature is the ability to Pull repositories as a one-step operation instead of Fetching and then Merging. You swipe left on repositories and tap Pull, and this is possible for repositories without modified files.\n\nFixes bug creating files where filename contained certain unicode characters. \n\nIndexing for search had a tendency to process some files multiple times in large repositories. It no longer does this.\n\nBrowsing very large repositories with the document picker could exhaust available memory. Working Copy will do less caching in such situations to keep things running.\n\nFixed crash that could happen at startup when a corrupt repository was present.\n\nFixed crash when pasting text on the iOS 11 beta.\n\nMany iOS 11 users are bothered by smart quotes when programming. When iOS 11 leaves beta, it will be possible for Working Copy to disable smart quotes during editing, but currently there is no way. You need to disable smart quotes for your entire device in the Keyboard settings.\n\nA few other smaller improvements and optimisations."},{"version_id":"823100182","version_name":"3.0.6","version_date":"2017-08-04 04:59:37.000 +0800","version_description":"Sign your commits to allow others to verify they are from you.\n\nYou enable commit signing by going to the detail screen of a identity, where you can add a GPG key either importing from clipboard or the file picker. Configure whether to ask for passphrase every time you sign, to recall the passphrase on Touch ID authentication or to just recall from the keychain automatically.\n\nWhen the current identity for a repository has a signing key, you can toggle whether the commit should be signed during the commit. \n\nSyntax highlighting for Rust.\n\nSearch index has been improved to include content of unknown file types as long as they contain text.\n\nIssues referenced in commit messages that point to other repositories such as golang/go#15049 link correctly.\n\nGitBook integration is working again.\n\nLots of smaller improvements and fixes."},{"version_id":"823349199","version_name":"3.0.8","version_date":"2017-09-03 03:22:57.000 +0800","version_description":"This release improves PGP signing, adds support for visualstudio.com and TFS servers as hosting providers and improves searching once again.\n\nIf you have a PGP signing key for the current identity on a repository, merge commits will display a commit sheet, to let you sign the merge commit.\n\nConfigure Visual Studio Team Services or a Team Foundation Server 2017 as a hosting provider in Working Copy to list your repositories for fast cloning and create new repositories from within the app. \n\nYou configure this in the Hosting Provider part of settings by entering a hostname. You need to use a personal access token for authentication instead of a password, but once the hosting provider is identified, there is a link from within the app to the relevant settings page in Safari.\n\nSearching large repositories would sometimes exhaust all available memory making the app crash and it no longer does this. \n\nIndexing has been split in two phases where it starts to just index text content itself which is pretty fast. Second phase does syntax analysis to allow fuzzy searching symbol declarations and this is a lot more work. By doing regular indexing first, you can do basic search on your entire repository much faster.\n\nSearch will also return results where search query is found in the middle of words not just matching entire words. This was already the case for the current file and when fuzzy searching symbol declarations. \n\nAdded syntax highlighting for SCSS.\n\nThe app would previously refuse to Merge or Pull when no commit identity was configured, even though fast-forward merges are often possible and do not require a identity. You can now try to Merge and Pull in these situations and if a commit identity turned out to be needed, the operation will fail until you configure a identity.\n\nLots of smaller fixes and improvements."},{"version_id":"823659479","version_name":"3.1.0","version_date":"2017-09-20 04:53:05.000 +0800","version_description":"This update is all about iOS 11, bringing your Git repositories to the Files app with rich Drag and Drop support on iPad.\n\nWorking Copy appears as a Location in the Files app showing your repositories, with all subdirectories and files. Open files, rename, move, tag, mark favourites or import files from other Locations where all changes end up in your repositories ready to be committed inside Working Copy.\n\nDrag and Drop between apps is exclusive to iPad, and makes it much easier to get files into or out of your repositories. \n\nDrag files from your emails, the Files app or any other supporting app to add to your repositories. When files already exist you can import as a new file or overwrite the existing one and when the existing file in your repository is already committed overwriting is automatic, saving you a little time, as it is very easy to Revert to get back old files.\n\nDirectories can be dragged into repositories or to the repository list to import a new repository and zip archives can be decompressed as they are dragged making them act like directories.\n\nWhen dragging files out of Working Copy the result will depend on the target app. Dragging files into emails will attach them and dragging into the Files app will export to this location. Textastic and other editing apps that support this can receive a reference to files or directories letting them edit in-place such that changes are made inside the repository.\n\nWhen searching your repository use quotes to find \"complete sentences\".\n\nSome users would like to use the dark icon with the light color scheme or vice versa. Now you can toggle the icon right where you change the color scheme.\n\nThere is some bad news too. It has not been possible to support the iOS 10 document picker and the iOS 11 Files app at the same time. To avoid breaking the document picker capabilities this update is only for iOS 11. I hope to restore iOS 10 compatibility very soon and to keep supporting iOS 10 until June 2018."},{"version_id":"823906587","version_name":"3.1.2","version_date":"2017-10-07 14:06:31.000 +0800","version_description":"Drag out files from specific commits to retrieve older versions. Looking at commit details you switch from viewing Changes to Files and can drag files back into your repository. On iPad you can drag files to other apps. On iPhone you can export older versions of files with the share sheet available after opening a file.\n\nFrom the App Integration page in settings you can configure the web browser used to open external links, where Chrome, Firefox and Safari are supported. Also lets you control whether GitHub.com links should open inside iOctocat when possible.\n\nYou can do a lot more with keyboard shortcuts. Hold down the command key to see what.\n\nImproved stability of Working Copy location in the Files app.\n\nImprovements to submodule support.\n\nFixed bug where new directories created inside repositories misbehaved until next app launch.\n\nFixed crash when trying to export private part of a ssh key. \n\nLots of smaller improvements and fixes."},{"version_id":"824207241","version_name":"3.1.7","version_date":"2017-11-07 16:54:05.000 +0800","version_description":"Generate GPG keys for signing commits inside Working Copy. You will be able to export the public or private parts of the key and configure the signing key on GitHub with a single tap. \n\n\"Save in Working Copy\" in share sheets is smarter about links, saving the target of the link and using the link itself for the filename.\n\nAdjustments to user interface for iPhone X.\n\nSubmodule icons updated to make it easy to see if they have been cloned or not.\n\nSyntax highlighting for x86 and ARM assembly language.\n\nImprovements to integration with Team Foundation Servers with non-default collection names.\n\nImproved performance and stability for commit graph.\n\nFix such that ascii mode PDFs preview correctly. \n\nLots of smaller adjustments and fixes."},{"version_id":"825387006","version_name":"3.2.2","version_date":"2017-12-21 07:14:23.000 +0800","version_description":"Last update had a problem where .ts files identified as video (mpeg Transport Streams) instead of TypeScript. Working Copy 3.2.2 fixes this.\n\nWhen you have many remote branches, the branch picker above directory listings only show the most recent remote ones. This makes it much easier to pick branches and you can jump to the full list of branches right from the branch picker, which is also where you Merge and Rebase.\n\nPull from the branch picker.\n\nFixed crashing bug when creating new files in empty directories.\n\nLots of smaller fixes and improvements.\n\n-----------\n\nWorking Copy 3.2.0 has rich support for log files. This can be logs collected when cloning, fetching or pushing and it can be logs imported from continuous integration server status page or actual log-files with the \"Open in Working Copy\" action extension.\n\nLog files can be linked to a repository, such that filenames are turned into references letting you jump to relevant lines in your source code right from the log mention.\n\nRead more about how log files work at:\n https://workingcopyapp.com/manual/logfiles\n\nBetter error messages when transfers fail.\n\nAudio files can be previewed just like video files.\n\nLots of smaller fixes and improvements."},{"version_id":"825724849","version_name":"3.2.6","version_date":"2018-01-24 03:41:23.000 +0800","version_description":"When pulling down the repository list to Fetch all repositories, the fetching is done in parallel which is MUCH faster.\n\nGit transfers (clone, fetch, push) have supported self-signed https certificates for a while, asking you whether to support the certificate based on certificate fingerprint. This is extended to hosting providers, such that you can fully use your private hosting provider with a self-signed certificate. You will be asked to approve the certificate from the detail screen of the provider during connection Test.\n\nFix layout glitch when editing files on iPhone X in landscape mode.\n\nRecently support was added for GitLab API v4 as GitLab API v3 was no longer available on latest servers. It was premature to drop support for GitLab API v3 and this has been restored.\n\nAction extension used to clone from URLs or import log files has been renamed to \"Process in Working Copy\". The previous name \"Open in Working Copy\" was easily confused as a way to send files into repositories. Use the share extension (colored icon, top row) called \"Save in Working Copy\" for this.\n\nImproved error messages when using Team Foundation Server hosting providers.\n\nFixed crash that would happen when previewing markdown files that had a raw link as the end of file.\n\nLots of smaller adjustments and fixes.\n\n-----------\n\nWorking Copy 3.2.0 has rich support for log files. This can be logs collected when cloning, fetching or pushing and it can be logs imported from continuous integration server status page or actual log-files with the \"Open in Working Copy\" action extension.\n\nLog files can be linked to a repository, such that filenames are turned into references letting you jump to relevant lines in your source code right from the log mention.\n\nRead more about how log files work at:\n https://workingcopyapp.com/manual/logfiles\n\nBetter error messages when transfers fail.\n\nAudio files can be previewed just like video files.\n\nLots of smaller fixes and improvements."},{"version_id":"826098877","version_name":"3.2.9","version_date":"2018-02-27 01:27:50.000 +0800","version_description":"Last update introduced problems with the built-in editor making it hard to edit the end of files on iPhone and made the app forget your location in a file when returning after not having edited for while. This is fixed now.\n\nFix such that exporting entire log file works as intended.\n\n3.2.8\n------------\nPreviously Working Copy asked for confirmation when the host key of a SSH server changed. To increase security it will also require confirmation the first time you connect to a new SSH server.\n\nView the list of known host keys from the SSH Keys screen inside settings where you can swipe to forget host keys. \n\nOn first launch after this update, all your repositories are checked to make sure that only modified files or committed files not yet pushed to a remote takes part of backup. This can make the app seem a bit slow but it is a one-time check and will make future backups faster and take up less space.\n\nThe log viewer has been rewritten to handle much larger log files. You still tap and hold to make a selection, but selection is made for entire lines and you can make selections with unselected lines in the middle. You can use a two-finger pinch to adjust text size for logs.\n\nSearch has been improved to work better in large repositories.\n\nOpening files is faster.\n\nWhen searching repository content or the commit graph a search history has been kept that you could access with the up and down arrows on a external keyboard. This is now available from a popup menu as well.\n\nWhen editing on iPhone a button to dismiss the keyboard has been added just above the keyboard, as the Done button in the upper right corner is hard to reach when working one-handed.\n\nDeep links into the app such as:\n   working-copy://open?repo=welcome&path=README.md\nsupport mode=preview to make sure the Content tab shows a preview.\n\nAdded syntax highlighting for Less files.\n\nMany smaller improvements and fixes."},{"version_id":"826201947","version_name":"3.3.0","version_date":"2018-03-16 21:40:17.000 +0800","version_description":"This update adds new features with the potential to change the work you can do on iOS by cooperating with remote servers through secure shell.\n\nSSH Upload lets you keep a directory on a remote server in sync with a local directory in Working Copy. This is especially useful for web-sites, Jekyll blogs and Node.js services that refresh as files change. SSH Upload starts by uploading all needed files to the server and will keep monitoring your local directory for changes that are then uploaded as you edit. You enable this from the share sheet of a repository or directory and watch a video of how it works in the Users' Guide:\n  https://workingcopyapp.com/manual/ssh-upload\n\nSSH Command lets you execute commands on a remote server, using your local files in Working Copy as input and bringing back results to iOS. This lets you run commands such as latex, make or xcodebuild and have access to command output and all files changed right inside Working Copy. Enable this from the share sheet of a directory or file. The app remembers which filetypes and directories have been used and will give you quick access with a left sliding action on the entry in your directory listing. Read more in the Users' Guide:\n  https://workingcopyapp.com/manual/ssh-command\n\nBoth features are available to users of a recent pro unlock. If you unlocked the push feature later than March 1st, 2017 you have permanent access, but if your unlock is more than a year old, you will need to purchase again at a reduced upgrade price. Just as you could try out the push feature for 10 days before unlocking, you can try out these new features for 10 days before upgrading.\n\nFuture pro features in Working Copy will work this way, which has a number of advantages:\n• You never lose features you paid for\n• App stays updated with non-pro features and other improvements for everyone\n• You decide when to upgrade to new pro features\n• At purchase you get the next 12 months of pro features as upgrade protection\n\nYou can access a timeline of features from the unlock settings screen and disable features you are not interested in.\n\nThere are a number of improvements not tied to the pro unlock as well.\n\nPreview Sketch files when looking at files and use image-diff when comparing changes to Sketch files.\n\nAdded preview mode for org-mode files and syntax highlighting for org-mode and Docker files.\n\nImprovements to fuzzy search of filenames and symbol declarations. Queries take abbreviations into consideration such that \"wc.\" prefers \n  WorkingCopy.swift over ViewController.swift\n\nRemember that section titles in Markdown are indexed as symbols and can be fuzzy searched and that you specify line number inside a query with something like “wc. 36” you jump directly to this point in a file.\n\nSearching and indexing has been made faster and more reliable in large repositories.\n\nThe Users' Guide available from app settings can play videos showing how to use the app. To avoid making the app much larger, these videos are only available when online. Video is available on screenshots with a play button.\n\nLots of smaller improvements and fixes."},{"version_id":"826337174","version_name":"3.3.2","version_date":"2018-04-06 14:24:44.000 +0800","version_description":"Editor is much faster at deleting and adding lines in large files.\n\nWorking Copy uses memory more efficiently and can clone huge repositories such as the Linux kernel on modern iOS devices. If you are working on something a order of magnitude larger such as WebKit you will still experience problems. Working Copy will keep improving.\n\nWhen using a Linux or BSD machine as a Git server, they are sometimes configured with a restricted shell only allowing Git operations, which blocked Working Copy from listing and creating repositories within the app. Check out \n  workingcopyapp.com/sshinfo\nfor information on how these restrictions can be lifted.\n\nThis improvement makes it much nicer to use a Synology NAS as a Git server and you can watch this 3 minute video on how to configure your Synology:\n  workingcopyapp.com/synology\n\nIt is easier to see where symbolic link point in directory listings.\n\nSpellcheck enabled when writing commit messages.\n\nFixed problem where directory names with umlauts or diacritics would sometimes confuse Working Copy showing content as modified or showing multiple directories. \n\nSyntax highlighting for the Julia language.\n\nFix crash that could happen when cloning submodules with invalid remote URLs.\n\nFixed some design glitches that crept in while adding features."},{"version_id":"827771307","version_name":"3.4.1","version_date":"2018-07-06 04:38:09.000 +0800","version_description":"This update fixes problems introduced in the last update, most importantly a crash that would occur in the final stages of cloning moderately sized repositories.\n\nPulling down repository list to Fetch All is available for long repository lists.\n\nButton that toggles whether Commit is followed by a Push now renders correctly.\n\nIt is easier to navigate into folders when dragging repositories.\n\nSSH Command works properly for repositories inside folders.\n\n3.4.0\n============\nThis update adds a pro feature for organising repositories into folders making it easier to manage LOTS of repositories.\nCreate folders by tapping + in the list of repositories and drag repositories inside. You can also drop a number of repositories on the + button to immediately create a folder containing these. Swipe left on folders to remove them again moving out repositories still inside. Renaming also requires you to swipe left on the folder.\n\nFolders are available in the Files app and 3rd party apps using the document browser.\n\nAs with other pro features this will be available for anyone that purchased or upgraded the pro unlock the last year.\n\nIf you decide to purchase the pro unlock today, you will get all current pro features available (push to remote, dark mode, ssh upload, ssh command and folders) as well as all pro features introduced the next 12 months. You will not loose access to any features after these 12 months, but new pro features added after this year will require you to upgrade the pro unlock.\n\nThere are a number of improvements that will benefit everyone.\n\n\"Save in Working Copy\" has been improved to suggest better filenames and can be used with several files or photos at once.\n\nWebP images are supported when looking at file Content or file Changes.\n\nIf you have many SSH keys the app will be better at picking the most likely one to work depending on the remote you are cloning from. This is especially important for hosting providers such as GitLab that will reject cloning attempts after just a few attempts with the wrong keys.\n\nFixed a regression where updates to submodules could cause modifications in the parent repository.\n\nSSH Command supports servers running the BusyBox minimal shell.\n\nMany smaller improvements."},{"version_id":"827981971","version_name":"3.4.3","version_date":"2018-07-27 04:05:30.000 +0800","version_description":"When searching from within editor you can switch between repository and file scope. Results in file scope are ordered by location instead of relevance taking your existing location in the file into account. Leave the query empty to be shown symbol declarations for a outline view of the current file. Because headlines in markdown are treated as symbols this is useful for source code and markdown.\n\nBetter syntax highlighting and symbol fuzzy searching for Objective-C files.\n\niPhone X in landscape mode support two panels just like plus-sized iPhones. Toggle this with a button in the upper left side of the rightmost panel.\n\nImproved deletion of remote branches.\n\nNicer markdown table rendering.\n\nDisable SSH for hosting providers such that https cloning will be preferred even when a SSH key is configured.\n\nMany smaller improvements.\n\n3.4.0\n============\nThis update adds a pro feature for organising repositories into folders making it easier to manage LOTS of repositories.\n\nCreate folders by tapping + in the list of repositories and drag repositories inside. You can also drop a number of repositories on the + button to immediately create a folder containing these. Swipe left on folders to remove them again moving out repositories still inside. Renaming also requires you to swipe left on the folder.\n\nFolders are available in the Files app and 3rd party apps using the document browser.\n\nAs with other pro features this will be available for anyone that purchased or upgraded the pro unlock the last year.\n\nIf you decide to purchase the pro unlock today, you will get all current pro features available (push to remote, dark mode, ssh upload, ssh command and folders) as well as all pro features introduced the next 12 months. You will not loose access to any features after these 12 months, but new pro features added after this year will require you to upgrade the pro unlock.\n\nThere are a number of improvements that will benefit everyone.\n\n\"Save in Working Copy\" has been improved to suggest better filenames and can be used with several files or photos at once.\n\nWebP images are supported when looking at file Content or file Changes.\n\nIf you have many SSH keys the app will be better at picking the most likely one to work depending on the remote you are cloning from. This is especially important for hosting providers such as GitLab that will reject cloning attempts after just a few attempts with the wrong keys.\n\nFixed a regression where updates to submodules could cause modifications in the parent repository.\nSSH Command supports servers running the BusyBox minimal shell.\n\nMany smaller improvements."},{"version_id":"828292227","version_name":"3.4.5","version_date":"2018-08-26 17:48:29.000 +0800","version_description":"Partially commit files by tapping the +x-y button to the right files in the commit dialog. You can tap and hold chunks or swipe them horizontally to decide whether they are committed or not. In the commit dialog half-filled circle means the file is partially staged for commit and as always you can tap files to toggle if they are committed or not.\n\nWhen editing files cloned from GitHub, BitBucket, GitLab, GoGS or VisualStudio.com you can open the selection in your browser with \"Open at ...\" in the Copy/Paste menu. This is very convenient when you need to point others to somewhere in your code.\n\nThere are substantial improvements to the x-callback-url support:\n • branch parameter for x-callback-url/merge is optional and without it merge is between current branch and its remote counterpart. \n • x-callback-url/write has a mode parameter than can be safe (don't overwrite uncommitted changes), overwrite, append or prepend. The existing append and overwrite parameters are deprecated and will be removed in one years time.\n • x-callback-url/fetch command.\n • x-callback-url/tag?name= can create tags. Use the commit parameter to tag a specific commits or HEAD is tagged. Include a non-empty message= for annotated tags. \n • x-callback-url/ssh-command invokes the \"SSH Command\" feature programmatically. \n • x-callback-url/log includes tag and branch head info\n • x-callback-url/clone can automate cloning where x-success returns repository name. \n • x-callback-url/checkout can create branches with mode=ensure or mode=create.\n • fixed x-callback-url/repos to include repositories inside folders.\n • improves error codes for x-callback-url inspired by HTTP status codes.\n • x-callback-url/write will preserve existing newline style when writing files, which should help when using Editorial.\n\nThe x-callback-url reference is available at:\n  https://workingcopy.app/url-schemes.html#x-callback-url\n\nFaster repository wide fuzzy search of symbols.\n\nDeep links on the form:\n  working-copy://open?repo=welcome&path=README.md\nsupports mode=edit to start editing.\n\nFix such that you can have multiple GitLab hosting providers with username baked into the server URL.\n\nBranch picker is properly shown for repositories in the \"Unborn HEAD\" state before the first commit has been made.\n\nBetter detection of issue links to other repositories in commit messages.\n\nLots of smaller changes and fixes."},{"version_id":"828428730","version_name":"3.4.6","version_date":"2018-09-01 23:53:31.000 +0800","version_description":"Preview Photoshop files.\n\nSyntax highlighting for Twig.\n\nFaster opening of logs when using \"Process in Working Copy\".\n\nAdded x-callback-url/delete for deleting branches. Use mode=prompt mode=refuse or mode=force to decide what should happen when branch isn't fully merged. \n\nWhen you Cancel the transfer process from Working Copy Enterprise this is remembered until you start the transfer again from the Enterprise app.\n\nIf you purchased the very first version of Working Copy Enterprise 2018, your unlock was not properly transferred to this app. After updating you can download and run Working Copy Enterprise 2018 again, pick \"Continue app switch\" from settings and you will get the unlock you are entitled to. Please email me from within app settings if your unlock period is not at least as much in Working Copy as it was in Working Copy Enterprise.\n\nFixed bug where x-callback-url/chain would repeat the first command.\n\nSome smaller changes and fixes.\n\n3.4.5\n============\nPartially commit files by tapping the +x-y button to the right files in the commit dialog. You can tap and hold chunks or swipe them horizontally to decide whether they are committed or not. In the commit dialog half-filled circle means the file is partially staged for commit and as always you can tap files to toggle if they are committed or not.\nWhen editing files cloned from GitHub, BitBucket, GitLab, GoGS or VisualStudio.com you can open the selection in your browser with \"Open at ...\" in the Copy/Paste menu. This is very convenient when you need to point others to somewhere in your code.\n\nThere are substantial improvements to the x-callback-url support:\n• branch parameter for x-callback-url/merge is optional and without it merge is between current branch and its remote counterpart. \n• x-callback-url/write has a mode parameter than can be safe (don't overwrite uncommitted changes), overwrite, append or prepend. The existing append and overwrite parameters are deprecated and will be removed in one years time.\n• x-callback-url/fetch command.\n• x-callback-url/tag?name= can create tags. Use the commit parameter to tag a specific commits or HEAD is tagged. Include a non-empty message= for annotated tags. \n• x-callback-url/ssh-command invokes the \"SSH Command\" feature programmatically. \n• x-callback-url/log includes tag and branch head info\n• x-callback-url/clone can automate cloning where x-success returns repository name. \n• x-callback-url/checkout can create branches with mode=ensure or mode=create.\n• fixed x-callback-url/repos to include repositories inside folders.\n• improves error codes for x-callback-url inspired by HTTP status codes.\n• x-callback-url/write will preserve existing newline style when writing files, which should help when using Editorial.\n\nThe x-callback-url reference is available at:\nhttps://workingcopy.app/url-schemes.html#x-callback-url\n\nFaster repository wide fuzzy search of symbols.\n\nDeep links on the form:\nworking-copy://open?repo=welcome&path=README.md\nsupports mode=edit to start editing.\n\nFix such that you can have multiple GitLab hosting providers with username baked into the server URL.\n\nBranch picker is properly shown for repositories in the \"Unborn HEAD\" state before the first commit has been made.\n\nBetter detection of issue links to other repositories in commit messages.\n\nLots of smaller changes and fixes."},{"version_id":"828819996","version_name":"3.5.5","version_date":"2018-10-09 13:21:24.000 +0800","version_description":"Customise the editing font in the mode popup where you also adjust font size. Choose between a number of great monospace fonts and import your own truetype or opentype fonts. This is a pro feature available to users that purchased the pro unlock within the last year. \n\nIf you purchase the pro unlock or the pro upgrade today, you will permanently unlock all existing pro features including font customisation. All pro features added the next year will also be permanently unlocked. Furthermore you will be funding additional development.\n\nFix authentication problem with remotes on Azure DevOps formerly known as Visual Studio Team Services.\n\nStatus message when fetching tries to be very specific about what has been fetched telling you what branches received commits and specific files changed by these commits. This is especially convenient when using Siri Shortcuts to Fetch.\n\nPull down the list of files inside a repository to Fetch from remote matching the equivalent behaviour on the repository list.\n\nWhen looking at files accessed through a commit, there is button taking you directly to the current version of that file for editing.\n\nWhen switching between dark and light mode the app icon no longer switches automatically. Tap the app icon to switch manually.\n\nOther improvements and fixes.\n\n3.5.0\n----------\nWith support for Siri Shortcuts in iOS 12 and the ability to generate x-callback-url commands from within the app, this release is all about automating Working Copy to speed up your workflow.\nOperations you perform often can be turned into Siri Shortcuts on iOS 12 and activated through speech. Use this to commit, pull/push repositories, copy files to/from the clipboard and a lot more.\n\nIf you have specific data flow or control flow requirements x-callback-url might be a better fit. Have a look at \nSettings > App Integrations > Callback examples\nlisting recent actions as x-callback-url's that you can edit by tapping parameter values.\n\nThese x-callback-url commands can be turned into Siri Shortcuts on iOS 12 or copied and dragged to apps such as Workflow, Shortcuts or Drafts making it very easy to automate even complex operations. Do it once manually and adjust parameter values with guidance from the app.\n\nLearn more about this in the Callbacks section of the Users' Guide.\n\nThe app registers these recent actions: \nview file content, \nedit files,\nimport files,\ncommitting,\nfetching one or all repositories, \npull/push repositories,\nstart/stopping WebDAV, \nswitching/creating/deleting branches, \ntagging commits, \ncloning or initialising repos,\nmoving/renaming files, \nrunning ssh commands,\nexport repo/directory as zip,\nlisting branches or commits.\n\nSpecify the currently shown repository, file or branch in x-callback-url commands using the value $current for parameters repo, path or branch. This is especially useful in combination with Siri Shortcuts.\n\nBranch picker shows a (i) button to the right of the currently checked out branch, making it fast to show the detail screen for this branch. This is where you can configure the branch to support rewriting history even after pushing to a remote, giving you additional flexibility when rebasing or resetting the branch head. Just remember not to force push to branches other people are using.\n\nImproved importing files from iCloud Drive when picking directories not yet downloaded to device.\n\nMany other improvements and fixes."},{"version_id":"829138393","version_name":"3.5.8","version_date":"2018-11-05 23:22:46.000 +0800","version_description":"Added support for newest device screens.\n\nSyntax highlighting for VHDL.\n\nFetch All connects to all remotes simultaneously which could cause some ssh servers to refuse connections. It will now throttle itself to avoid such errors.\n\n3.5.0\n----------\nWith support for Siri Shortcuts in iOS 12 and the ability to generate x-callback-url commands from within the app, this release is all about automating Working Copy to speed up your workflow.\nOperations you perform often can be turned into Siri Shortcuts on iOS 12 and activated through speech. Use this to commit, pull/push repositories, copy files to/from the clipboard and a lot more.\nIf you have specific data flow or control flow requirements x-callback-url might be a better fit. Have a look at \nSettings > App Integrations > Callback examples\nlisting recent actions as x-callback-url's that you can edit by tapping parameter values.\nThese x-callback-url commands can be turned into Siri Shortcuts on iOS 12 or copied and dragged to apps such as Workflow, Shortcuts or Drafts making it very easy to automate even complex operations. Do it once manually and adjust parameter values with guidance from the app.\nLearn more about this in the Callbacks section of the Users' Guide.\nThe app registers these recent actions: \nview file content, \nedit files,\nimport files,\ncommitting,\nfetching one or all repositories, \npull/push repositories,\nstart/stopping WebDAV, \nswitching/creating/deleting branches, \ntagging commits, \ncloning or initialising repos,\nmoving/renaming files, \nrunning ssh commands,\nexport repo/directory as zip,\nlisting branches or commits.\nSpecify the currently shown repository, file or branch in x-callback-url commands using the value $current for parameters repo, path or branch. This is especially useful in combination with Siri Shortcuts.\nBranch picker shows a (i) button to the right of the currently checked out branch, making it fast to show the detail screen for this branch. This is where you can configure the branch to support rewriting history even after pushing to a remote, giving you additional flexibility when rebasing or resetting the branch head. Just remember not to force push to branches other people are using.\nImproved importing files from iCloud Drive when picking directories not yet downloaded to device.\nMany other improvements and fixes."},{"version_id":"829189025","version_name":"3.6.0","version_date":"2018-11-21 18:00:15.000 +0800","version_description":"Manage files on iCloud Drive or \"On My Device\" with Git.\n\nWorking Copy allows other apps to open files in-place such that they can access repositories without having to copy things around. This has long been the ideal way for apps to cooperate with Working Copy. For apps without this capability you have needed to use the share sheet to copy files into the app and to save them back into Working Copy. \n\nThis is about to become a lot easier for apps that store documents in iCloud Drive or \"On My Device\" such as Codea, iA Writer, Scriptable and many others. \n\nConfigure directories inside Working Copy to be synchronised with directories used by other apps. As you edit files in the other app changes are synced back to Working Copy ready to be committed. WHen you pull from a Git remote or switch between branches things are synced back to the directory of the other app.\n\nThere are two ways to set this up.\n\nTo add existing documents from another app to Working Copy, tap + from the repository list then \"Setup synced directory\" and pick a directory.  All files from this directory will be imported into a new repository ready to be committed. You might want to add a remote at the Repository status screen and push up the initial commit.\n\nIf you already have your documents managed by Git or want to setup syncing with a subdirectory of a repository you invoke the share sheet on any directory or repository in Working Copy and pick the \"Files Sync\" action.\n\nStatus is shown with a icon above directory listings that you tap for a list of recent sync operations and the ability to Restore files overwritten or deleted.\n\nLearn more about this new feature in the Files synchronisation section of the Users' Guide.\n\nWorking Copy now supports GitHawk the excellent app for staying on top of your GitHub issues and pull requests. At the bottom of the App Integration screen you enable that links to GitHub.com jump directory to GitHawk instead. This is very convenient when your commit messages contain references to pull requests or issues.\n\nSupport for http cookies. Import your cookies from the new \"Authentication Cookies\" screen in settings. It accepts the classic Netscape cookie.txt format also used by .gitcookies but you are allowed to have comma instead of tab as a field delimiter, making it easier to use the authentication cookie generated by Google Cloud.\n\nWhen repositories contain a .gitreview file any change ID's in commit messages are converted into links to the Gerrit server.\n\nNicer binary diff when looking at Changes for binary files that are not images.\n\nMarkdown mode will syntax highlight the contents of indented and fenced code blocks.\n\nMany smaller adjustments and fixes."},{"version_id":"829403157","version_name":"3.6.1","version_date":"2018-11-28 03:38:32.000 +0800","version_description":"Fix problem listing repositories on BitBucket for some users.\n\nWhen cloning forked repositories from BitBucket, GitHub or GitLab a upstream remote will be added pointing to the fork parent. This upstream remote starts out disabled but enabling it is much faster than configuring one from scratch.\n\nAdded syntax highlighting for Arduino & AutoHotkey.\n\nSyntax highlighting inside fenced or indented code blocks in Markdown added last update has been removed. It caused excessive memory usage on moderately sized markdown files making the app crash. It will return when it can be done efficiently.\n\nWhen you clone repositories the origin will be adjusted if you don't have push permissions. You can change this later on from the Repository status screen.\n\nSupport for using personal access tokens instead of username/password with Go Git Services for users that enable two factor authentication. Please enable two-factor authentication everywhere you can.\n\nUse \"Process in Working Copy\" from the sharesheet in Safari when browsing Gerrit Code Review pages to open the equivalent commit inside Working Copy. \n\nFeature timeline has been improved to better show the cut-off date at which pro features will start out locked for users migrating from Working Copy Enterprise. You access this list from the Pro unlock screen in settings.\n\nSome other small improvements and fixes.\n\n3.6.0\n------------------------------\nManage files on iCloud Drive or \"On My Device\" with Git.\n\nWorking Copy allows other apps to open files in-place such that they can access repositories without having to copy things around. This has long been the ideal way for apps to cooperate with Working Copy. For apps without this capability you have needed to use the share sheet to copy files into the app and to save them back into Working Copy.\n\nThis is about to become a lot easier for apps that store documents in iCloud Drive or \"On My Device\" such as Codea, iA Writer, Scriptable and many others.\n\nConfigure directories inside Working Copy to be synchronised with directories used by other apps. As you edit files in the other app changes are synced back to Working Copy ready to be committed. When you pull from a Git remote or switch between branches things are synced back to the directory of the other app.\n\nThere are two ways to set this up.\n\nTo add existing documents from another app to Working Copy, tap + from the repository list then \"Setup synced directory\" and pick a directory. All files from this directory will be imported into a new repository ready to be committed. You might want to add a remote at the Repository status screen and push up the initial commit.\n\nIf you already have your documents managed by Git or want to setup syncing with a subdirectory of a repository you invoke the share sheet on any directory or repository in Working Copy and pick the \"Files Sync\" action.\n\nStatus is shown with a icon above directory listings that you tap for a list of recent sync operations and the ability to Restore files overwritten or deleted.\n\nLearn more about this new feature in the Files synchronisation section of the Users' Guide.\n\nWorking Copy now supports GitHawk the excellent app for staying on top of your GitHub issues and pull requests. At the bottom of the App Integration screen you enable that links to GitHub.com jump directory to GitHawk instead. This is very convenient when your commit messages contain references to pull requests or issues.\n\nSupport for http cookies. Import your cookies from the new \"Authentication Cookies\" screen in settings. It accepts the classic Netscape cookie.txt format also used by .gitcookies but you are allowed to have comma instead of tab as a field delimiter, making it easier to use the authentication cookie generated by Google Cloud.\n\nWhen repositories contain a .gitreview file any change ID's in commit messages are converted into links to the Gerrit server.\n\nNicer binary diff when looking at Changes for binary files that are not images."},{"version_id":"829515433","version_name":"3.6.3","version_date":"2018-12-05 14:24:03.000 +0800","version_description":"Marking directories as favorites in the Files app now works as it should.\n\nImport build logs from Visual Studio AppCenter build pages by using \"Process in Working Copy\" from the share sheet. To get all logs imported you should tap \"Download Logs\" on the build page and invoke \"Process in Working Copy\" on the resulting zip archive.\n\nAs with other logs in Working Copy you can assign a repository to logs which detects file mentions turning these into links that open the editor at specific lines. This is great for quickly fixing failed builds.\n\nWhen you are switching between editing and previewing html your cursor location is remembered. On external keyboards Cmd+Alt+P is a quick way to jump in and out of Preview mode,\n\nSSH Upload works with servers running the rssh shell restricting connections to only use scp and sftp.\n\nSyntax highlighting for Crystal, Ocaml and Coq.\n\nUse \"Untrack file\" from the share sheet of files to stop tracking but keep them in your working directory. \n\nOther minor improvements and fixes.\n\n3.6.0\n------------------------------\nManage files on iCloud Drive or \"On My Device\" with Git.\n\nWorking Copy allows other apps to open files in-place such that they can access repositories without having to copy things around. This has long been the ideal way for apps to cooperate with Working Copy. For apps without this capability you have needed to use the share sheet to copy files into the app and to save them back into Working Copy.\n\nThis is about to become a lot easier for apps that store documents in iCloud Drive or \"On My Device\" such as Codea, iA Writer, Scriptable and many others.\n\nConfigure directories inside Working Copy to be synchronised with directories used by other apps. As you edit files in the other app changes are synced back to Working Copy ready to be committed. When you pull from a Git remote or switch between branches things are synced back to the directory of the other app.\n\nThere are two ways to set this up.\n\nTo add existing documents from another app to Working Copy, tap + from the repository list then \"Setup synced directory\" and pick a directory. All files from this directory will be imported into a new repository ready to be committed. You might want to add a remote at the Repository status screen and push up the initial commit.\n\nIf you already have your documents managed by Git or want to setup syncing with a subdirectory of a repository you invoke the share sheet on any directory or repository in Working Copy and pick the \"Files Sync\" action.\n\nStatus is shown with a icon above directory listings that you tap for a list of recent sync operations and the ability to Restore files overwritten or deleted.\n\nLearn more about this new feature in the Files synchronisation section of the Users' Guide.\n\nWorking Copy now supports GitHawk the excellent app for staying on top of your GitHub issues and pull requests. At the bottom of the App Integration screen you enable that links to GitHub.com jump directory to GitHawk instead. This is very convenient when your commit messages contain references to pull requests or issues.\n\nSupport for http cookies. Import your cookies from the new \"Authentication Cookies\" screen in settings. It accepts the classic Netscape cookie.txt format also used by .gitcookies but you are allowed to have comma instead of tab as a field delimiter, making it easier to use the authentication cookie generated by Google Cloud.\n\nWhen repositories contain a .gitreview file any change ID's in commit messages are converted into links to the Gerrit server.\n\nNicer binary diff when looking at Changes for binary files that are not images."},{"version_id":"829643722","version_name":"3.6.4","version_date":"2018-12-15 04:54:31.000 +0800","version_description":"Fix bug introduced in last update where cursor would sometimes jump around when editing with external keyboard.\n\n3.6.3\n------------------------------\nMarking directories as favorites in the Files app now works as it should.\nImport build logs from Visual Studio AppCenter build pages by using \"Process in Working Copy\" from the share sheet. To get all logs imported you should tap \"Download Logs\" on the build page and invoke \"Process in Working Copy\" on the resulting zip archive.\n\nAs with other logs in Working Copy you can assign a repository to logs which detects file mentions turning these into links that open the editor at specific lines. This is great for quickly fixing failed builds.\n\nWhen you are switching between editing and previewing html your cursor location is remembered. On external keyboards Cmd+Alt+P is a quick way to jump in and out of Preview mode,\n\nSSH Upload works with servers running the rssh shell restricting connections to only use scp and sftp.\n\nSyntax highlighting for Crystal, Ocaml and Coq.\n\nUse \"Untrack file\" from the share sheet of files to stop tracking but keep them in your working directory.\n\nOther minor improvements and fixes.\n\n3.6.0\n------------------------------\nManage files on iCloud Drive or \"On My Device\" with Git.\n\nWorking Copy allows other apps to open files in-place such that they can access repositories without having to copy things around. This has long been the ideal way for apps to cooperate with Working Copy. For apps without this capability you have needed to use the share sheet to copy files into the app and to save them back into Working Copy.\n\nThis is about to become a lot easier for apps that store documents in iCloud Drive or \"On My Device\" such as Codea, iA Writer, Scriptable and many others.\n\nConfigure directories inside Working Copy to be synchronised with directories used by other apps. As you edit files in the other app changes are synced back to Working Copy ready to be committed. When you pull from a Git remote or switch between branches things are synced back to the directory of the other app.\n\nThere are two ways to set this up.\n\nTo add existing documents from another app to Working Copy, tap + from the repository list then \"Setup synced directory\" and pick a directory. All files from this directory will be imported into a new repository ready to be committed. You might want to add a remote at the Repository status screen and push up the initial commit.\n\nIf you already have your documents managed by Git or want to setup syncing with a subdirectory of a repository you invoke the share sheet on any directory or repository in Working Copy and pick the \"Files Sync\" action.\n\nStatus is shown with a icon above directory listings that you tap for a list of recent sync operations and the ability to Restore files overwritten or deleted.\n\nLearn more about this new feature in the Files synchronisation section of the Users' Guide.\n\nWorking Copy now supports GitHawk the excellent app for staying on top of your GitHub issues and pull requests. At the bottom of the App Integration screen you enable that links to GitHub.com jump directory to GitHawk instead. This is very convenient when your commit messages contain references to pull requests or issues.\n\nSupport for http cookies. Import your cookies from the new \"Authentication Cookies\" screen in settings. It accepts the classic Netscape cookie.txt format also used by .gitcookies but you are allowed to have comma instead of tab as a field delimiter, making it easier to use the authentication cookie generated by Google Cloud.\n\nWhen repositories contain a .gitreview file any change ID's in commit messages are converted into links to the Gerrit server.\n\nNicer binary diff when looking at Changes for binary files that are not images."},{"version_id":"829863829","version_name":"3.6.7","version_date":"2019-01-09 02:23:44.000 +0800","version_description":"Now you can edit and preview simultaneously.\n\nPreview mode for markdown, html, javascript, org-mode and asciidoc has been improved to work while you are editing. Connect a browser either running on the same iPad in Split Screen mode or from another device. The URL is shown in the mode popup in preview mode and can be exported by long-tapping or dragging it, and it will keep working when you switch back to editing mode.\n\nIf you connect a external display through a HDMI adapter or AirPlay a little monitor icon will appear in the top of the file content screen. Tapping this lets you enable and configure the external display preview. You can either make the preview scrolling follow your editor or scroll explicitly by dragging the thumbnail shown when configuring the external display.\n\nExternal preview is a pro feature that is available to everyone that purchased the pro unlock within the last 12 months. If you purchased the pro upgrade more than a year ago you can upgrade the pro unlock at half price and get all current pro features unlocked as well as future pro features added the next year. The pro features you unlock are permanent and will not disappear after this year.\n\nPreviously it hasn't been possible to Merge or Pull to a repository with modified files. Now optimistic merging is attempted that auto-stashes modifications before merge and unstashes after merge. If unstash completes without conflicts, the result will be a merged repository with your modified files. When unstash has conflicts the merge will fail as it previously did when there was any kind of modified files.\n\nGlitch is a online service and community for creating and remixing web apps. Now Working Copy has support for cloning Glich apps and pushing back changes you make. You can read more about this in the Glitch section of the Users' Guide.\n\nAdded support for \"Grape for GitHub\" such that references to GitHub.com can deep link into Grape. Enable this from the bottom of App Integration settings screen.\n\nFix such that \"Save in Working Copy\" always asks to Commit.\n\nFixed bug where syntax highlighting didn't work for some multibyte encodings.\n\nImproved handling of submodules with internal modifications.\n\nMany smaller fixes and improvements.\n\nv3.6.5\n---------\nFinally you can use Git Large File Storage (LFS) for your repositories with large binary files such as videos, images or audio. You don't need to do anything and can clone repositories as you normally do. Working Copy will download all needed assets when you checkout commits and upload changes to LFS objects as you push.\nAny LFS enabled repositories cloned before this update will have LFS pointers in your working directory instead of real objects. The easiest fix is to clone the repository again.\n\nWhen using Git Large File Storage you shouldn't notice, but the implementation was rewritten from scratch to work on iOS, as the regular Git LFS implementation requires command-line Git and a shell. This kind of effort was possible because enough people are purchasing the Pro unlock to support full-time development. Thank you for this.\n\nThe editor tries hard to adapt to your repository settings. It looks for encoding and indentation style in files with Emacs headers such as \n-*- tab-width: 4; charset: utf-8; -*- \nand it has been doing frequency analysis to make qualified guesses when there was nothing in the file header.\n\nNow it also looks at .editorconfig files and uses these when the file header itself doesn't convey anything but before trying frequency analysis. GitHub and many other development tools support .editorconfig files and you should consider adopting them.\n\nImproved behaviour of indent and unindent on iPad, especially for files mixing tabs and spaces.\n\nWhen looking at merge commits you are shown changes compared to the mainline parent instead of both parent commits.\n\nInside the Files app the .git directory can no longer be entered like regular directories as there was nothing regular about it."},{"version_id":"829979403","version_name":"3.6.8","version_date":"2019-01-19 16:52:25.000 +0800","version_description":"Preliminary support for custom markdown stylesheets. If there exists a “md-styles.css” file in the same directory as the markdown file being previewed this file is used as the stylesheet.\n\nFont size for previews and editing are independent.\n\nChanges tab uses the same font-size as when editing.\n\nFixed some bugs parsing .editorconfig files. It should work much better now.\n\nFixed auto-indentation in the editor.\n\nx-callback-url/status no longer fails when there are deleted files.\n\nx-callback-url/read can be invoked with type=url to return a universal url, which is useful when picking files in the start of a workflow.\n\nOther minor fixes and adjustments.\n\nv3.6.5\n---------\nFinally you can use Git Large File Storage (LFS) for your repositories with large binary files such as videos, images or audio. You don't need to do anything and can clone repositories as you normally do. Working Copy will download all needed assets when you checkout commits and upload changes to LFS objects as you push.\nAny LFS enabled repositories cloned before this update will have LFS pointers in your working directory instead of real objects. The easiest fix is to clone the repository again.\n\nWhen using Git Large File Storage you shouldn't notice, but the implementation was rewritten from scratch to work on iOS, as the regular Git LFS implementation requires command-line Git and a shell. This kind of effort was possible because enough people are purchasing the Pro unlock to support full-time development. Thank you for this.\n\nThe editor tries hard to adapt to your repository settings. It looks for encoding and indentation style in files with Emacs headers such as \n-*- tab-width: 4; charset: utf-8; -*- \nand it has been doing frequency analysis to make qualified guesses when there was nothing in the file header.\n\nNow it also looks at .editorconfig files and uses these when the file header itself doesn't convey anything but before trying frequency analysis. GitHub and many other development tools support .editorconfig files and you should consider adopting them.\n\nImproved behaviour of indent and unindent on iPad, especially for files mixing tabs and spaces.\n\nWhen looking at merge commits you are shown changes compared to the mainline parent instead of both parent commits.\n\nInside the Files app the .git directory can no longer be entered like regular directories as there was nothing regular about it."},{"version_id":"830182587","version_name":"3.6.9","version_date":"2019-02-07 14:02:50.000 +0800","version_description":"Use the filtering field when cloning to only list matching repositories making it much faster to pick the one you need. Filtering has been possible for years but the field is now at the top making it easier to discover and use. If you filter by \"star\" your starred repositories on GitHub are included with repositories containing star in the name or url.\n\nWhen checking out branches the files being checked out are shown below the progress indicator. This is especially helpful when using Git LFS as checkout might download LFS blobs.\n\nFixed Git LFS compatibility with GitBucket servers and improved error messages on Git LFS problems.\n\nBetter compatibility with Gitolite hosting providers.\n\nImproved connecting to SSH hosting providers where hostname resolves to both IPv4 and IPv6 addresses but one of these isn't working.\n\nSSH Upload and SSH Command no longer times out and closes the connection when uploading a single file takes longer than 30 seconds. \n\nSSH Upload properly handles symlinks to directories.\n\nOther minor fixes and adjustments.\n\nv3.6.5\n---------\nFinally you can use Git Large File Storage (LFS) for your repositories with large binary files such as videos, images or audio. You don't need to do anything and can clone repositories as you normally do. Working Copy will download all needed assets when you checkout commits and upload changes to LFS objects as you push.\nAny LFS enabled repositories cloned before this update will have LFS pointers in your working directory instead of real objects. The easiest fix is to clone the repository again.\n\nWhen using Git Large File Storage you shouldn't notice, but the implementation was rewritten from scratch to work on iOS, as the regular Git LFS implementation requires command-line Git and a shell. This kind of effort was possible because enough people are purchasing the Pro unlock to support full-time development. Thank you for this.\n\nThe editor tries hard to adapt to your repository settings. It looks for encoding and indentation style in files with Emacs headers such as \n-*- tab-width: 4; charset: utf-8; -*- \nand it has been doing frequency analysis to make qualified guesses when there was nothing in the file header.\n\nNow it also looks at .editorconfig files and uses these when the file header itself doesn't convey anything but before trying frequency analysis. GitHub and many other development tools support .editorconfig files and you should consider adopting them.\n\nImproved behaviour of indent and unindent on iPad, especially for files mixing tabs and spaces.\n\nWhen looking at merge commits you are shown changes compared to the mainline parent instead of both parent commits.\n\nInside the Files app the .git directory can no longer be entered like regular directories as there was nothing regular about it."},{"version_id":"830390374","version_name":"3.7.0","version_date":"2019-03-01 13:57:56.000 +0800","version_description":"BitBucket is shutting down version 1 of their API on April 12th and this update makes Working Copy ready for this. \n\nConfiguring SSH keys is no longer allowed using the new BitBucket API but you can use the BitBucket.org website to configure keys and enable Secure Shell Git transfers from the hosting provider settings inside the app. Authentication tokens will be used instead of passwords for https transfers such that this is now the preferred transfer protocol for BitBucket.\n\nPreview your Jupyter Notebooks inside your repository. Looking at .ipynb files you switch to preview mode with the button in the upper right corner.\n\nUsers with the pro unlock can use external displays connected via AirPlay or HDMI for preview, which is ideal for presenting your notebooks to a larger audience.\n\nYou can share Jupyter Notebooks previews through nbviewer.jupyter.org using \"Send to nbviewer\" from the share sheet. Working Copy creates a private gist to use with nbviewer. These previews are very close to what GitHub.com shows but non-technical users might prefer nbviewer.\n\nConfigure repositories to allow empty commit messages. This is done from the Repository status screen where you choose the commit identity. Please use responsibly. \n\nSafer merging into repositories where some files had never been committed.\n\nImprovements when using Fetch all or Pull all repositories through Siri Shortcuts.\n\nSettings screen contains a link to the privacy policy.\n\nSome smaller improvements and bug-fixes.\n\nv3.6.5\n---------\nFinally you can use Git Large File Storage (LFS) for your repositories with large binary files such as videos, images or audio. You don't need to do anything and can clone repositories as you normally do. Working Copy will download all needed assets when you checkout commits and upload changes to LFS objects as you push.\nAny LFS enabled repositories cloned before this update will have LFS pointers in your working directory instead of real objects. The easiest fix is to clone the repository again.\n\nWhen using Git Large File Storage you shouldn't notice, but the implementation was rewritten from scratch to work on iOS, as the regular Git LFS implementation requires command-line Git and a shell. This kind of effort was possible because enough people are purchasing the Pro unlock to support full-time development. Thank you for this.\n\nThe editor tries hard to adapt to your repository settings. It looks for encoding and indentation style in files with Emacs headers such as \n-*- tab-width: 4; charset: utf-8; -*- \nand it has been doing frequency analysis to make qualified guesses when there was nothing in the file header.\n\nNow it also looks at .editorconfig files and uses these when the file header itself doesn't convey anything but before trying frequency analysis. GitHub and many other development tools support .editorconfig files and you should consider adopting them.\n\nImproved behaviour of indent and unindent on iPad, especially for files mixing tabs and spaces.\n\nWhen looking at merge commits you are shown changes compared to the mainline parent instead of both parent commits.\n\nInside the Files app the .git directory can no longer be entered like regular directories as there was nothing regular about it."},{"version_id":"830483985","version_name":"3.7.1","version_date":"2019-03-05 00:53:58.000 +0800","version_description":"There was a problem in the last release such that Git LFS transfers would often cancel which this update fixes.\n\nv3.7.0\n---------\nBitBucket is shutting down version 1 of their API on April 12th and this update makes Working Copy ready for this.\nConfiguring SSH keys is no longer allowed using the new BitBucket API but you can use the BitBucket.org website to configure keys and enable Secure Shell Git transfers from the hosting provider settings inside the app. Authentication tokens will be used instead of passwords for https transfers such that this is now the preferred transfer protocol for BitBucket.\n\nPreview your Jupyter Notebooks inside your repository. Looking at .ipynb files you switch to preview mode with the button in the upper right corner.\n\nUsers with the pro unlock can use external displays connected via AirPlay or HDMI for preview, which is ideal for presenting your notebooks to a larger audience.\n\nYou can share Jupyter Notebooks previews through nbviewer.jupyter.org using \"Send to nbviewer\" from the share sheet. Working Copy creates a private gist to use with nbviewer. These previews are very close to what GitHub.com shows but non-technical users might prefer nbviewer.\n\nConfigure repositories to allow empty commit messages. This is done from the Repository status screen where you choose the commit identity. Please use responsibly.\n\nSafer merging into repositories where some files had never been committed.\n\nImprovements when using Fetch all or Pull all repositories through Siri Shortcuts.\n\nSettings screen contains a link to the privacy policy.\n\nSome smaller improvements and bug-fixes."},{"version_id":"830878684","version_name":"3.7.5","version_date":"2019-04-08 19:25:28.000 +0800","version_description":"Open pull requests for repositories on GitHub or GitLab right from the full list of branches where you can already merge and rebase. \n\nThis is a Pro feature available to everyone that unlocked less than a year ago. If you unlocked more than 12 months ago you can purchase the unlock upgrade to get all pro features available now and added the next year. Pro features you unlock are not lost after this year.\n\nWorking Copy will make sure the current branch and base branches are up-to-date on device as well as remotely before opening the pull request. You type the pull request title and perhaps a comment and add labels. On GitHub you can add assignees and mark the PR as draft. Some of these options are only available if you have push privileges to the base repository.\n\nWhen the pull request has been created you can view it in GitHawk, Grape or Safari. You change what app to use for Github links in the bottom of App Integration settings.\n\nLearn more about pull request creation in section 4.3 of the Users' Guide.\n\nThere are major improvements to submodule support. \n\nSubmodules are normally in detached HEAD state where you cannot commit making it difficult to make changes. Working Copy will detect this situation and commit to a local branch that corresponds to the detached HEAD (if this can be found unambigiously) and then go back to a detached HEAD state with the newly created commit. Commit & Push changes to submodules with no extra hassle.\n\nParent repositories are better at detecting when submodules have changed their HEAD pointer and Revert on the parent repository will recursively Revert submodules as well. \n\nFinally you will be asked if you want to recursively clone submodules at the end of cloning.\n\nWhen directories only contain a single subdirectory (as often happens in Java projects) tapping the directory will jump to the innermost of these directories matching GitHub behaviour. You can navigate back to reach the skipped directories or long-tap the back button to step out multiple levels.\n\nWhen configuring Azure DevOps hosting providers the app will try to help populate the server field.\n\nImproved status messages when idle in SSH Upload making it clear that it is waiting for changes to upload.\n\nSyntax highlighting for Vue.\n\nPreview and Image modes load significantly faster.\n\nFix such that Hexadecimal mode is working again.\n\nImproved rendering af Jupyter Notebook code cell results.\n\nSome smaller improvements and bug-fixes."},{"version_id":"831306247","version_name":"3.7.7","version_date":"2019-05-21 12:59:30.000 +0800","version_description":"Use Markdown Content Blocks to reference other markdown files, images, csv files and sourde code by writing /relative/path-to-file.md in your markdown documents. This is assembled into a single preview. \n\nWorking Copy watches references and will refresh the preview when any local dependency changes. Remember that you can connect external displays through HDMI or AirPlay or you can use Textastic or iA Writer while Working Copy is in Preview mode to get side-by-side editing+preview on iPad.\n\nThe image picker above the keyboard on iPad has a switch at the top to insert content blocks instead of regular markdown images.\n\nPull Request creation is supported for BitBucket.\n\nChoose the target GitHub organization when creating new repositories from the remote detail screen.\n\nImproved partial staging when looking at files from the commit dialog.\n\nBetter syntax highlighting for SQL.\n\n\"Save in Working Copy\" is smarter when used from the share sheet of a not-yet-saved screenshot.\n\n\"Save in Working Copy\" only preselects the saved file when asking to commit.\n\nUse Alt+P on external keyboards to toggle Push in commit dialogs.\n\nImproved Git LFS authentication to work with Netlify Large Media telling you where to find your Netlify access token.\n\nImprove behaviour when cloning public GitHub repository with LFS over https.\n\nMany other fixes and adjustments."},{"version_id":"831502357","version_name":"3.7.8","version_date":"2019-06-05 03:44:51.000 +0800","version_description":"This update addresses problems reading BitBucket repositories when cloning. \n\nMy apologies to the BitBucket users that have had a hard time cloning repositories the last few days.\n\nv3.7.7\n-------\nUse Markdown Content Blocks to reference other markdown files, images, csv files and sourde code by writing /relative/path-to-file.md in your markdown documents. This is assembled into a single preview.\nWorking Copy watches references and will refresh the preview when any local dependency changes. Remember that you can connect external displays through HDMI or AirPlay or you can use Textastic or iA Writer while Working Copy is in Preview mode to get side-by-side editing+preview on iPad.\n\nThe image picker above the keyboard on iPad has a switch at the top to insert content blocks instead of regular markdown images.\n\nPull Request creation is supported for BitBucket.\n\nChoose the target GitHub organization when creating new repositories from the remote detail screen.\n\nImproved partial staging when looking at files from the commit dialog.\n\nBetter syntax highlighting for SQL.\n\n\"Save in Working Copy\" is smarter when used from the share sheet of a not-yet-saved screenshot.\n\n\"Save in Working Copy\" only preselects the saved file when asking to commit.\n\nUse Alt+P on external keyboards to toggle Push in commit dialogs.\n\nImproved Git LFS authentication to work with Netlify Large Media telling you where to find your Netlify access token.\n\nImprove behaviour when cloning public GitHub repository with LFS over https.\n\nMany other fixes and adjustments."},{"version_id":"831967412","version_name":"3.8.1","version_date":"2019-07-11 09:28:49.000 +0800","version_description":"Fix crash that could happen when committing large PDF files wrongly identified as text files.\n\nAdjustments for student developers.\n\nv3.7.7\n-------\nUse Markdown Content Blocks to reference other markdown files, images, csv files and sourde code by writing /relative/path-to-file.md in your markdown documents. This is assembled into a single preview.\n\nWorking Copy watches references and will refresh the preview when any local dependency changes. Remember that you can connect external displays through HDMI or AirPlay or you can use Textastic or iA Writer while Working Copy is in Preview mode to get side-by-side editing+preview on iPad.\n\nThe image picker above the keyboard on iPad has a switch at the top to insert content blocks instead of regular markdown images.\n\nPull Request creation is supported for BitBucket.\n\nChoose the target GitHub organization when creating new repositories from the remote detail screen.\n\nImproved partial staging when looking at files from the commit dialog.\n\nBetter syntax highlighting for SQL.\n\n\"Save in Working Copy\" is smarter when used from the share sheet of a not-yet-saved screenshot.\n\n\"Save in Working Copy\" only preselects the saved file when asking to commit.\n\nUse Alt+P on external keyboards to toggle Push in commit dialogs.\n\nImproved Git LFS authentication to work with Netlify Large Media telling you where to find your Netlify access token.\n\nImprove behaviour when cloning public GitHub repository with LFS over https."},{"version_id":"832377200","version_name":"3.8.3","version_date":"2019-08-15 05:18:00.000 +0800","version_description":"Under-the-hood changes to the text editor. You can no longer disable word-wrap but by removing this rarely used option it was possible to greatly increase performance when editing large files.\n\nWhen cloning repositories where LFS blobs fail to resolve you are able to reclone with LFS disabled. \n\nLFS compatibility with Azure DevOps.\n\nFixes problem where listing repositories on GitHub would time out for some users.\n\nAdded syntax highlighting for Gherkin .feature files.\n\nLots of smaller fixes and performance improvements."},{"version_id":"832447628","version_name":"3.8.4","version_date":"2019-08-21 05:35:08.000 +0800","version_description":"Syntax highlighting for Pascal / Delphi and Ada.\n\nFixed glitch in the editor where scrolling would jump when editing long lines.\n\nFixes and adjustments for thrill seekers.\n\nv3.8.3\n=======\nUnder-the-hood changes to the text editor. You can no longer disable word-wrap but by removing this rarely used option it was possible to greatly increase performance when editing large files.\n\nWhen cloning repositories where LFS blobs fail to resolve you are able to reclone with LFS disabled.\n\nLFS compatibility with Azure DevOps.\n\nFixes problem where listing repositories on GitHub would time out for some users.\n\nAdded syntax highlighting for Gherkin .feature files.\n\nLots of smaller fixes and performance improvements."},{"version_id":"832698275","version_name":"3.8.5","version_date":"2019-09-10 16:59:35.000 +0800","version_description":"Fix crash that could happen when navigating away from files in Preview mode.\n\nFixed bad VoiceOver behaviour for \"Add Remote\" on the Repository status screen.\n\nv3.8.3\n=======\nUnder-the-hood changes to the text editor. You can no longer disable word-wrap but by removing this rarely used option it was possible to greatly increase performance when editing large files.\n\nWhen cloning repositories where LFS blobs fail to resolve you are able to reclone with LFS disabled.\n\nLFS compatibility with Azure DevOps.\n\nFixes problem where listing repositories on GitHub would time out for some users.\n\nAdded syntax highlighting for Gherkin .feature files.\n\nLots of smaller fixes and performance improvements."},{"version_id":"832733931","version_name":"3.9.0","version_date":"2019-09-19 13:14:36.000 +0800","version_description":"Support for automation with new structured actions for the Shortcuts app on iOS 13.\n\nThese new actions support:\n Checking out branches,\n Committing repositories,\n Getting Repository files,\n Pulling repositories,\n Pushing repositories,\n Staging files for Commit &\n Writing Repository files.\n \nLocate these actions in the Shortcuts app on iOS 13 inside Apps > Working Copy and tap (i) for tips on how to use the actions or consult section 5.6 of the Working Copy Users' Guide.\n\nThese actions are able to take input from other actions and pass along output. You will be able to write text, photos and files into repositories or to pass files from repositotories and use these in other parts of a shortcut.\n\nThis is much nicer than using x-callback-url for automation since you don't need to worry about composing URL's or to switch between apps to transfer data. You will be able to combine capabilities of different apps in new exciting ways. \n\nWorking Copy supports the system wide dark appearance on iOS 13. Dark mode has been a Pro feature in Working Copy for a number of years. Now it will be overriding the system appearance that requires this unlock. \n\nOn iOS 13 you can tap and hold repositories, directories and files for a popup menu with relevant actions. Many of these actions are the same as the ones available by swiping cells, but you will find additional actions as this context menu has better room and isn't activted on accident like swipe actions.\n\nAdditional smaller adjustments and fixes."},{"version_id":"832919233","version_name":"3.9.1","version_date":"2019-09-29 16:05:46.000 +0800","version_description":"Use the Repository History action in the iOS 13 Shortcuts app to list latest commits with message, author, date, sha1 identifier and link to GitHub.com and other hosting provider websites when known.\n\nExisting actions for Shortcuts on iOS 13 use much less memory and should run without problems on large repositories.\n\nFixed some issues with x-callback-url on iOS 13.\n\nUsing \"Process in Working Copy\" from Safari fixed for iOS 13.\n\nLots of smaller adjustments and fixes.\n\n3.9.0\n========\nSupport for automation with new structured actions for the Shortcuts app on iOS 13.\n\nThese new actions support:\n Checking out branches,\n Committing repositories,\n Getting Repository files,\n Pulling repositories,\n Pushing repositories,\n Staging files for Commit &\n Writing Repository files.\n \nLocate these actions in the Shortcuts app on iOS 13 inside Apps > Working Copy and tap (i) for tips on how to use the actions or consult section 5.6 of the Working Copy Users' Guide.\n\nThese actions are able to take input from other actions and pass along output. You will be able to write text, photos and files into repositories or to pass files from repositotories and use these in other parts of a shortcut.\n\nThis is much nicer than using x-callback-url for automation since you don't need to worry about composing URL's or to switch between apps to transfer data. You will be able to combine capabilities of different apps in new exciting ways. \n\nWorking Copy supports the system wide dark appearance on iOS 13. Dark mode has been a Pro feature in Working Copy for a number of years. Now it will be overriding the system appearance that requires this unlock. \n\nOn iOS 13 you can tap and hold repositories, directories and files for a popup menu with relevant actions. Many of these actions are the same as the ones available by swiping cells, but you will find additional actions as this context menu has better room and isn't activted on accident like swipe actions."},{"version_id":"832981751","version_name":"3.9.2","version_date":"2019-10-01 00:28:27.000 +0800","version_description":"Fix bug where the app would sometimes switch to light mode when the systemwide dark mode was enabled on iOS 13.\n\nFix bug where editor wouldn't properly show text when file numbers are disabled and first line is long.\n\nShortcuts action for Writing Repository files has option to create missing directories as needed.\n\nFix problem renaming files from the context menu on iOS 13.\n\nFix problem introduced in last update where merging a repository would sometimes not be reflected in the UI.\n\nAdditional adjustments and fixes.\n\n3.9.0\n========\nSupport for automation with new structured actions for the Shortcuts app on iOS 13.\n\nThese new actions support:\n Checking out branches,\n Committing repositories,\n Getting Repository files,\n Pulling repositories,\n Pushing repositories,\n Staging files for Commit &\n Writing Repository files.\n \nLocate these actions in the Shortcuts app on iOS 13 inside Apps > Working Copy and tap (i) for tips on how to use the actions or consult section 5.6 of the Working Copy Users' Guide.\n\nThese actions are able to take input from other actions and pass along output. You will be able to write text, photos and files into repositories or to pass files from repositotories and use these in other parts of a shortcut.\n\nThis is much nicer than using x-callback-url for automation since you don't need to worry about composing URL's or to switch between apps to transfer data. You will be able to combine capabilities of different apps in new exciting ways. \n\nWorking Copy supports the system wide dark appearance on iOS 13. Dark mode has been a Pro feature in Working Copy for a number of years. Now it will be overriding the system appearance that requires this unlock. \n\nOn iOS 13 you can tap and hold repositories, directories and files for a popup menu with relevant actions. Many of these actions are the same as the ones available by swiping cells, but you will find additional actions as this context menu has better room and isn't activted on accident like swipe actions."},{"version_id":"833161649","version_name":"3.9.5","version_date":"2019-10-17 15:28:16.000 +0800","version_description":"Configure a repository to make Rebase the default operation when getting commits from the remote instead of Merge. You configure this from Repository > Status > Configuration where you also set the commit identity. \n\nThis is a pro feature available to anyone that purchased or upgraded their unlock within the last 12 months. Rebase from the branch list is still available for everyone.\n\nNew \"Open in Working Copy\" action for iOS 13 Shortcuts app. This can be used to open directories or files for editing or previewing and by enabling \"Clone if needed\" can be used to clone. \n\nYou can specify a remote url for the repository parameter in all shortcut actions but only if the remote url is unique among repositories in the app.\n\nThere are plans for a dedicated cloning action that will allow specifying a folder and name, but this action picks a default name and the root folder when cloning.\n\nConfigure GitHub to use password/token instead of OAuth authentication. This can be useful if you need access to organizations that do not allow 3rd party apps.\n\nMagic stashing is used for rebase to allow rebase when repository has modified files just as it is for Merge.\n\nImprovements to Git LFS authentication with Netlify.\n\nActions to Pull all repositories and toggle WebDAV from app icon works on iOS 13.\n\nAdditional adjustments and fixes.\n\n3.9.0\n========\nSupport for automation with new structured actions for the Shortcuts app on iOS 13.\n\nThese new actions support:\n Checking out branches,\n Committing repositories,\n Getting Repository files,\n Pulling repositories,\n Pushing repositories,\n Staging files for Commit &\n Writing Repository files.\n \nLocate these actions in the Shortcuts app on iOS 13 inside Apps > Working Copy and tap (i) for tips on how to use the actions or consult section 5.6 of the Working Copy Users' Guide.\n\nThese actions are able to take input from other actions and pass along output. You will be able to write text, photos and files into repositories or to pass files from repositotories and use these in other parts of a shortcut.\n\nThis is much nicer than using x-callback-url for automation since you don't need to worry about composing URL's or to switch between apps to transfer data. You will be able to combine capabilities of different apps in new exciting ways. \n\nWorking Copy supports the system wide dark appearance on iOS 13. Dark mode has been a Pro feature in Working Copy for a number of years. Now it will be overriding the system appearance that requires this unlock. \n\nOn iOS 13 you can tap and hold repositories, directories and files for a popup menu with relevant actions. Many of these actions are the same as the ones available by swiping cells, but you will find additional actions as this context menu has better room and isn't activted on accident like swipe actions."},{"version_id":"833443439","version_name":"3.9.6","version_date":"2019-11-04 22:31:07.000 +0800","version_description":"Bug fixes and performance improvements."},{"version_id":"833641636","version_name":"3.9.7","version_date":"2019-11-20 15:13:51.000 +0800","version_description":"Release notes can be accessed from app settings.\n\nCreate branches from commit detail screen or from the context menu shown on iOS 13 when long tapping commits.\n\nWhen creating/importing files from directory listing the new files is automatically shown on iPad.\n\nFix bug where rebasing commits from remote would discard untracked files.\n\nFix problem copy/pasting text files from directory listing.\n\nFix UI glitch on iOS 13 when picking Working Copy from action sheets to save files into repositories."},{"version_id":"833719546","version_name":"3.9.8","version_date":"2019-11-26 17:38:34.000 +0800","version_description":"The libssh2 library handling secure shell is updated to v1.9.0 which enables a number of improvements.\n\nSupport for importing ECDSA and Ed25219 private keys in PEM or OpenSSH format.\n\nThe app still generates RSA keys but at 4096 bits instead of the previous 2048 bits.\n\nElliptic Curve Cryptography is used to verify hosts that support this. You will need to verify your ssh host keys again due to this change.\n\nNew shortcuts actions to Create Branch, Merge Branch & Delete Branch.\n\nFixed bug where creation of new branches was refused when repository had modified files."},{"version_id":"833937565","version_name":"3.9.9","version_date":"2019-12-11 00:38:15.000 +0800","version_description":"Fixes crashes that could happen when browsing repository files or previewing HTML files with Javascript console enabled."},{"version_id":"834208778","version_name":"4.0.0","version_date":"2020-01-03 23:35:31.000 +0800","version_description":"This release has a number of design improvements when running iOS 13 or iPadOS. \n\nDirectory listings have a new look and you checkout other branches by tapping the button to the right of the branch name instead of the previous button at the top.\n\nAll screens showing a repository or content from a repository allow you to perform repository wide operations such as Commit, Revert, Fetch, Pull & Push. On iPad or iPhones in landscape mode these buttons are available at the very top of the screen.\n\nA floating button is available in the lower right corner on iPhone for easy one-handed access to the repository status sheet showing modified files and easy access to Commit, Revert, Fetch, Pull & Push. You tap and hold this floating button to move it to the lower left or to disable the floating button entirely.\n\nWhen there is no floating button a smaller but similar fingerprint button is shown at the top of the screen. You tap and hold this to enable the floating button which makes it available on iPad as well. On iPad you can drag this button into a new window to show the repository status sheet and since this displays modified files and updates as files change, this can be very useful when using external editors such as Textastic.\n\nAdded new Clone Repository action for the Shortcuts app allowing you to pick a target folder. Since cloning is time consuming the work happens inside Working Copy opening Shortcuts when done. You can use the \"Wait to return\" action to pause your shortcut while Working Copy is cloning.\n\nAdded Shortcuts action to list repositories.\n\nWhen dragging down repository list to fetch all repositories the repositories inside folders are fetched as well. When fetching completes you can merge in new commits but this didn't include repositories inside folders. Now it does.\n\n.tsx files are recognised as TypeScript and .hh files as C/C++ by default.\n\nLong tap the app icon from the home screen to Pull All repositories with fast-forward only merging.\n\nWhen looking at changes for files or commits words that are deleted or added will be highlighted. This highlighting is better at handling punctuation.\n\nFix problem where it would be impossible to Fetch if a remote branch such as \"feature\" got replaced by \"feature/new\" because pruning of deleted branches wasn't done until fetch completed and fetch couldn't complete when old branch blocked the new one. \n\nFix syntax highlighting for strings in SQL.\n\nFix for error where font setting for markdown preview wasn't respected.\n\nBetter error messages when importing GPG keys fail."},{"version_id":"834223636","version_name":"4.0.1","version_date":"2020-01-06 04:45:41.000 +0800","version_description":"Fix bug where Fetch/Merge/Pull/Push buttons on the new repository status sheet would not properly update when finishing operations.\n\nv4.0.0\n======\nThis release has a number of design improvements when running iOS 13 or iPadOS. \n\n\nDirectory listings have a new look and you checkout other branches by tapping the button to the right of the branch name instead of the previous button at the top.\n\nAll screens showing a repository or content from a repository allow you to perform repository wide operations such as Commit, Revert, Fetch, Pull & Push. On iPad or iPhones in landscape mode these buttons are available at the very top of the screen.\n\nA floating button is available in the lower right corner on iPhone for easy one-handed access to the repository status sheet showing modified files and easy access to Commit, Revert, Fetch, Pull & Push. You tap and hold this floating button to move it to the lower left or to disable the floating button entirely.\n\nWhen there is no floating button a smaller but similar fingerprint button is shown at the top of the screen. You tap and hold this to enable the floating button which makes it available on iPad as well. On iPad you can drag this button into a new window to show the repository status sheet and since this displays modified files and updates as files change, this can be very useful when using external editors such as Textastic.\n\nAdded new Clone Repository action for the Shortcuts app allowing you to pick a target folder. Since cloning is time consuming the work happens inside Working Copy opening Shortcuts when done. You can use the \"Wait to return\" action to pause your shortcut while Working Copy is cloning.\n\nAdded Shortcuts action to list repositories.\n\nWhen dragging down repository list to fetch all repositories the repositories inside folders are fetched as well. When fetching completes you can merge in new commits but this didn't include repositories inside folders. Now it does.\n\n.tsx files are recognised as TypeScript and .hh files as C/C++ by default.\n\nLong tap the app icon from the home screen to Pull All repositories with fast-forward only merging.\n\nWhen looking at changes for files or commits words that are deleted or added will be highlighted. This highlighting is better at handling punctuation.\n\nFix problem where it would be impossible to Fetch if a remote branch such as \"feature\" got replaced by \"feature/new\" because pruning of deleted branches wasn't done until fetch completed and fetch couldn't complete when old branch blocked the new one. \n\nFix syntax highlighting for strings in SQL.\n\nFix for error where font setting for markdown preview wasn't respected.\n\nBetter error messages when importing GPG keys fail."},{"version_id":"834282556","version_name":"4.0.3","version_date":"2020-01-13 16:19:53.000 +0800","version_description":"When a repository has merge or rebase conflicts a Resolve button is available instead of the Commit button on the new repository action and at the top of the screen on iPad.\n\nNew Shortcuts action \"Repository References\" can be used to list all branches for a repository or other references such as tags by changing the Pattern parameter.\n\nBranch parameter for Repository History shortcuts action accepts full references for the Branch parameter, to make it work better with the new Repository References action.\n\nMarkdown preview supports mathematical formula.\n\niPhone users on iOS 13 have a tab button just above the keyboard when editor is in \"Programming\" mode that you enable from the dropdown in the upper right corner. This tab button respects .editorconfig files in the repository.\n\nBetter syntax highlighting for JSX.\n\nFix that number of lines shown as -removed and +added for each file is correct in commit dialog.\n\nDeep links didn't work on iPad when the screen was wide enough for two panels but the left one was hidden. Now they work."},{"version_id":"834467715","version_name":"4.0.5","version_date":"2020-01-29 17:20:31.000 +0800","version_description":"Context menu for files in directory listings include a new Duplicate action. \n\nWhen configuring Files app sync from the share sheet of directories inside Working Copy there is a new Setup Package Sync action. Use this for Codea projects and other document types that are directories but appear as files.\n\nFull branch list will again include remote branches with a local counterpart. It was a mistake not to include these in v4.0.3\n\nCommit identifiers use a monospace font on iOS 13.\n\nUnder some circumstances there could be confusion about directories inside Working Copy that didn't look like folders of repositories but wasn't repositories either. To better handle such situations you will now be able to enter these directories, to export or delete files inside and to convert the directory to a repository."},{"version_id":"834638750","version_name":"4.0.7","version_date":"2020-02-09 15:17:44.000 +0800","version_description":"Create Markdown links from within the editor by selecting a link or title and tapping Insert Link from the Copy/Paste menu. If you have a url on the clipboard this will be used for the href part and if you end up with an empty title this will be read from the target page.\n\nAdded syntax highlighting for OpenGL Shading Language.\n\nImproved detection of GB2312 encoding.\n\nSuggestions when writing commit messages better respect casing of text typed by the user.\n\nSupport for previewing HEIC images.\n\nCloning would sometimes fail when url had _ in the hostname. Now they are allowed.\n\nFix bug where Pull Repository in Shortcuts app didn't work on repositories configured to rebase changes from remote."},{"version_id":"834794064","version_name":"4.0.8","version_date":"2020-02-21 16:34:59.000 +0800","version_description":"When cloning repositories from BitBucket, GitHub or GitLab the repositories with recent changes are at the top.\n\nSupport for previewing RAW images.\n\nFix SSH connection issues that could happen on some IPv6 networks or when using a VPN.\n\nCopy remote URL to clipboard from context menu on repository status screen.\n\nNew Revert Commit action from the share sheet on the commit detail screen. This applies the reverse change to your current working directory.\n\nCreate branches from the branch picker show when tapping the button next to the current branch name on iOS 13.\n\nFix such that creating pull requests is allowed between upstream and downstream repositories and not just the more common direction from downstream to upstream.\n\nImproved detection of branch changes from outside the main app.\n\nFix glitch where it was possible to show commit graph when it was already shown on iPad.\n\nFix such that saving files into Working Copy works from the Photos app share sheet.\n\nFix bug where image picker in markdown files would sometimes make weird changes to the text."},{"version_id":"834977767","version_name":"4.0.9","version_date":"2020-03-05 22:17:22.000 +0800","version_description":"Added Shortcuts action to Fetch from remote.\n\nImproved color consistency when using Increase Contrast.\n\nFix bug where renaming repository folders from the context menu would sometimes fail.\n\nFix bug where fetching all repositories inside folder would often popup the log thumbnail even when nothing exciting was logged."},{"version_id":"835027285","version_name":"4.1.0","version_date":"2020-03-16 15:48:52.000 +0800","version_description":"Added keyboard shortcuts to Copy, Delete, Duplicate, Paste & Rename the file currently selected with arrow keys. Hold down Command on your external keyboard to list keyboard shortcuts.\n\nFix such that attachments dragged from Mail and dropped into Working Copy are correct on iOS 13.\n\nContext menu for files include Copy Path action.\n\nFix crash that could happen when listing commits on iOS 12.\n\nList of SSH keys updates immediately when a new SSH key has been generated.\n\nFix bug where content of repository folders was sometimes wrong after renaming until next app launch."},{"version_id":"835157613","version_name":"4.1.2","version_date":"2020-03-20 15:19:14.000 +0800","version_description":"Long tap repositories and pick \"Push to…\" for a powerful and flexible way to Push. You can push local references such as branches or tags to any remote reference (branch, tag, pull request, gerrit issue) in any remote repository. To make this efficient there is autocomplete on source reference, remote repository and remote reference.\n\nThis is a pro feature available to anyone that unlocked the app from April 2019 or later. If you purchase or upgrade the pro unlock today you get access to this new feature, all other pro features and any added the next 12 months. You do not lose access to pro features when these 12 months are gone.\n\nFixed problem when doing SSH transfers with GitLab where the app failed to try a new SSH key when the first one was recognised but didn't grant access to the repository.\n\nFiles starting with . are included in the Files app.\n\nFixed bug where it was impossible to enter new login/username on authentication errors when username was baked into hosting provider server field."},{"version_id":"835263783","version_name":"4.1.4","version_date":"2020-03-26 01:06:10.000 +0800","version_description":"UI elements respond to the cursor on iPadOS 13.4 when connecting a mouse or trackpad.\n\nSSH Command has support for port forwarding where it listens for local connections and forwards these through the remote server. Tap the new button at the top of your SSH Command to configure this.\n\nFixed memory leak that could cause the app to run out of memory and quit after extended use."},{"version_id":"835272860","version_name":"4.1.5","version_date":"2020-03-31 13:37:52.000 +0800","version_description":"Server Persistence is a new feature that can track your location while server features of Working Copy are in use. You will be able to see where you have been while WebDAV, SSH Command, SSH Upload or External Preview was running and this allows the app to keep working in the background. \n\nThis is a pro feature available to anyone that unlocked the app in the last 12 months. If you purchase or upgrade the pro unlock today you get access to Server Persistence and any pro features added the next year. You do not lose access to existing pro features after 12 months but new ones will be locked.\n\nThere are distinct settings for WebDAV, External Preview and each of the servers you use with SSH Upload / Command. These locations are remembered for 10 days and never leaves your device.\n\nWhen editing in Natural mode the modern quotes and dashes are no longer converted to plain ones. Switching between Natural and Programming mode is done by tapping the button with the file type in the upper right corner and is remembered for each type of file.\n\nReading of commit lists is much faster in large repositories.\n\nFix bug where resetting a local branch to the head of the remote branch would require history rewriting to be allowed. Now this is correctly considered a non-rewriting reset."},{"version_id":"835386391","version_name":"4.1.6","version_date":"2020-04-03 23:44:29.000 +0800","version_description":"Open repositories on BitBucket, GitHub & GitLab in Safari from the context menu on iOS 13.\n\nUpdated syntax highlighting definitions for Markdown.\n\nFix crash that could happen when filtering in directory listings would hide all files."},{"version_id":"835463089","version_name":"4.1.7","version_date":"2020-04-10 20:54:08.000 +0800","version_description":"8 new app icons designed by the amazing Michael Flarup. Tap the small icon at the top of app settings for a list of icons. Using the new icons require a pro unlock purchased within the last year. \n\nPinch to change text size in editor is no longer available when editing as it made it very hard to perform 3-finger gestures to undo, cut and paste. \n\nSSH Upload properly detects file changes happening while Working Copy is in the background uploading as needed.\n\nFix such that repository status button works from commit graph."},{"version_id":"835565516","version_name":"4.1.8","version_date":"2020-04-16 22:45:06.000 +0800","version_description":"Fix problem where opening commit graph on iPad would sometimes freeze the app.\n\nGet Repository Files action in the Shortcuts app can be configured to output a zip archive instead of individual files.\n\nWhen entering commits from the Status tab of a file the changes from this file are shown at the top.\n\nAuto stashing when rebasing changes didn't properly include Added (never committed) files and now it does.\n\nShift + Tab properly unindents files using tab for indentation.\n\nKeyboard shortcut to Delete File from directory listing is deactivated while editing files as it conflicted with standard shortcut to Delete Line."},{"version_id":"835663846","version_name":"4.2.0","version_date":"2020-04-29 13:50:40.000 +0800","version_description":"Working Copy is able to create Digital Ocean droplets on demand for use with the SSH features of the app. Go to Settings > Hosting Providers > Digital Ocean and sign in with your Digital Ocean account for a list of droplets and the ability to configure a SSH key with a single tap.\n\nTap + to create new droplets with your choice of operating system, hardware/price and datacenter region. Droplets created by the app are tagged with working_copy and can be stopped, started and destroyed from within the app. Host keys of new servers are generated by Working Copy and applied through #cloud-config for operating systems supporting this such that connections can be made without having to prompt to verify the host key.\n\nTap the small button to the right of the server field on the SSH Command screen itself for a list that includes previously used servers and now Digital Ocean droplets with buttons to configure or create new servers.\n\nYou might be using another cloud provider than Digital Ocean and wondering when I will support AWS, Alibaba Cloud, Azure, Linode et cetera. I plan to eventually support additional cloud providers but this isn't my top priority and I suggest you sign up with Digital Ocean as it will make some of my coming features more flexible. You can keep down costs by destroying servers when you are done with them which is easy from within the app.\n\nDigital Ocean integration requires iOS 13 or iPadOS.\n\nCustom actions in the Shortcuts app clears cached data for all but the most recently used 3 repositories. This avoids excessive memory usage when running through all repositories.\n\nPreview of AsciiDoc that included other documents no longer causes the app to crash.\n\nPopup shown when long-tapping back button is shown on right click as well when a pointing device is attached on iPadOS 13.4 \n\nYou can no longer invoke the share sheet by sliding left on files and directories on iOS 13 as it conflicted with other gestures. Long tap to share from the context menu."},{"version_id":"835779113","version_name":"4.2.1","version_date":"2020-05-01 23:12:58.000 +0800","version_description":"Improvements to how your repositories can be recloned when you restore from backup."},{"version_id":"835802763","version_name":"4.2.2","version_date":"2020-05-04 15:30:58.000 +0800","version_description":"Jump directly from repositories or directories inside Working Copy to the Files app from the context menu on iOS 13.\n\nPick Working Copy from the context menu of directories & files in the Files app to jump back.\n\nImprovements in Files app to avoid \"Content unavailable\" errors for very large directories.\n\nFix such that dragging directories into Textastic always works.\n\nLists of branches in Shortcuts custom actions update when you make changes from inside the main app."},{"version_id":"835901158","version_name":"4.2.3","version_date":"2020-05-12 12:56:32.000 +0800","version_description":"Relative links are inserted when picking images during Markdown or LaTeX editing on iPad.\n\nWhen enabling zip archive output in the Get Repository Files action in Shortcuts you can configure how zip archive retains directory hierarchy from repository.\n\nAdded confirmation step when deleting SSH keys.\n\nPerformance improvements to port forwarding for SSH Command.\n\n.editorconfig files are working again.\n\nFix layout glitch for navigation bar title after state restoration."},{"version_id":"836040723","version_name":"4.2.4","version_date":"2020-05-26 02:22:27.000 +0800","version_description":"Fix lockup when showing commit graph on iOS 13.5\n\nWhen resolving conflicts the avatar images of the commit authors on each side are shown.\n\nKeyboard shortcuts to Fetch/Pull/Push show progress on repository status sheet.\n\nBetter display of errors in Jupyter notebooks.\n\nFix bug where Markdown and HTML preview sometimes refused to refresh until you left and entered the file again.\n\nFix problem where Write to Repository action in the Shortcuts app didn't always stage files with certain characters in filename.\n\nFix bug where submodules that got replaced by regular directories when switching branches didn't properly refresh.\n\nUpdated special Netlify LFS instructions to work with latest configurations."},{"version_id":"836213184","version_name":"4.2.5","version_date":"2020-06-01 15:26:52.000 +0800","version_description":"Fix such that dragging document packages (such as Swift Playgrounds) into Working Copy correctly imports directory.\n\nUsing Working Copy from the share sheet works correctly with document packages.\n\nConfigure and open your Digital Ocean servers in the Files app when Secure ShellFish is installed from the context menu where your servers are listed. \n\nSheet to create Digital Ocean servers will present it itself much faster.\n\nSSH Command asks to create missing remote directories."},{"version_id":"836263391","version_name":"4.2.7","version_date":"2020-06-08 15:33:57.000 +0800","version_description":"SSH Command that allows you to use command line tools from a server on the files in your repository has significant improvements for long-running commands. Tapping Stop will send a signal equivalent to ^C in the terminal, giving the command a chance to stop voluntarily and changes to be downloaded. Tapping Stop again will close the SSH connection and skip downloading.\n\nConfigure how SSH Command shares files between device and server by tapping the button with the up/down arrows where you also enable port forwarding. The Sync mode is the old behaviour where files are uploaded, command is run and changed files are downloaded. Switch File Sharing to Off such that the command runs without any file transfers or switch to the new Mount mode.\n\nMount makes your local directory available on the server through a WebDAV share such that it appears as a regular directory. This way commands can run immediately without having to upload any files and changed files are immediately available inside Working Copy before the command completes. This WebDAV share is tunnelled through the existing SSH connection making it fully secure. The app can help you install davfs2 used to mount this WebDAV share on Debian/Ubuntu style Linux distributions.\n\nSSH Command remembers previous commands used for certain files and filetypes, but is could be difficult to get started. Now Working Copy recognises shell, perl, ruby and python scripts and includes suggestions on how to execute these on your server. Dockerfiles are recognised as well suggesting a command to build a container. \n\nYou will see the top suggestion in the context menu for files and additional suggestions in the little bookmark button when using SSH Command.\n\nRemember that you can spin up servers at Digital Ocean and easily shut them down again for fast, cost efficient access to servers.\n\nFix error saving attachments from the Mail app into Working Copy from the share sheet.\n\nFixed bug where port forwarding during SSH Command didn't work.\n\nWhen searching in the editor the empty file scope search is presented differently to work better as an outline of the file."},{"version_id":"836391598","version_name":"4.2.8","version_date":"2020-06-15 14:28:38.000 +0800","version_description":"Editor detects characters in right-to-left (RTL) scripts and adjusts alignment accordingly.\n\nSetting inside repository configuration allowing empty commit messages now enables entirely empty commits without files. In the commit dialog you still have to verify empty commits to avoid accidents.\n\nFix problem using BitBucket LFS when remote has SSH scheme.\n\nAdjust margin for global scroll gesture."},{"version_id":"836443939","version_name":"4.2.9","version_date":"2020-06-18 14:17:37.000 +0800","version_description":"Preview mode for .csv and .tsv files.\n\nWrite non-empty commit messages in your empty commits.\n\nFix problem where changing editor mode right after app launch didn't work."},{"version_id":"836550921","version_name":"4.3.0","version_date":"2020-06-24 21:59:20.000 +0800","version_description":"Fixed problem checking GitHub student status."},{"version_id":"836717716","version_name":"4.3.2","version_date":"2020-07-07 04:06:25.000 +0800","version_description":"Scroll location is remembered for the most recently previewed PDF, Markdown, HTML, AsciiDoc and org-mode documents.\n\nShortcuts action to write repository files supports appending and prepending to existing files.\n\nUpdated to latest libgit2 v1.0.1 for Git operations.\n\nNew keyboard shortcut for SSH Command that should not conflict with any system shortcuts for any keyboard layouts.\n\nFix bug where SSH Command would upload to a truncated version of the filename when it contained certain characters."},{"version_id":"837177331","version_name":"4.3.3","version_date":"2020-08-01 20:24:44.000 +0800","version_description":"Automate creating Pull Requests with new Shortcuts action.\n\nSecret GitHub gists are listed alongside public gists when cloning.\n\nFix bug where opening files in preview mode from Shortcuts would sometimes fail.\n\nSetup Package Sync used with Codea is working again."},{"version_id":"837401928","version_name":"4.3.5","version_date":"2020-08-24 21:21:01.000 +0800","version_description":"Submodules can be configured inside Working Copy. All existing submodules are available from the Repository status screen where you can add new submodules and remove the configuration for non-cloned submodules.\n\nSubmodule configuration is a Pro feature available to everyone that purchased or upgraded their Pro unlock less than 12 months ago.\n\nContext menu for submodules has distinct choices to Commit or Revert Submodule content or the pointer to the HEAD from parent repository.\n\nPush to… from repository context menus makes it easier to just enter a branch name for the remote reference asking you to add refs/heads/ as needed.\n\nFix bug where \"Pull to Fetch all\" didn't work for new folders."},{"version_id":"837623520","version_name":"4.3.7","version_date":"2020-09-06 22:16:53.000 +0800","version_description":"Preview Markdown, HTML, AsciiDoc, org-mode or Jupyter Notebooks on external displays connected through AirPlay or HDMI.\n\nWhen you have an external display connected a small TV button on the top of the screen when viewing files that can be previewed. Toggle preview, adjust text size and control scrolling from there.\n\nThis is part of the External Preview pro feature that is available to everyone that purchased the unlock after January 2018."},{"version_id":"837804323","version_name":"4.4.0","version_date":"2020-09-17 01:12:06.000 +0800","version_description":"Start or Stop the internal WebDAV server from shortcuts on iOS 14 without opening Working Copy. The custom action to control WebDAV is available on iOS 13 as well but needs to open the app.\n\nUniversal links can be used in HTML and Markdown preview to jump to files in other repositories inside the app. Generate universal links from the share sheet.\n\nFixed issue where preview on external display would sometimes start out wrong when connecting display while a file was being shown."},{"version_id":"837973845","version_name":"4.4.1","version_date":"2020-09-27 20:32:10.000 +0800","version_description":"Fix swiping from left screen edge to make it correctly go back a level."},{"version_id":"838064611","version_name":"4.4.2","version_date":"2020-10-04 09:04:35.000 +0800","version_description":"Recently open files are available by tapping the bookmark button in the upper right corner of repository or directory lists. Long tapping the back button now has standard behaviour on iOS 14 allowing you to step out multiple screens.\n\nLogs can be opened from list of recently open files.\n\nLinks in commit messages to websites, issues or pull requests work properly."},{"version_id":"838147698","version_name":"4.4.3","version_date":"2020-10-10 22:01:07.000 +0800","version_description":"Fix bug where back button would not reappear after searching in editor."},{"version_id":"838170420","version_name":"4.4.5","version_date":"2020-10-19 14:16:37.000 +0800","version_description":"Context menu for commits and files can open the corresponding page on the hosting provider website or their app when available.\n\nFull branch list available from the Repository status & configuration supports filtering by name.\n\nImprovements to word diff highlighting.\n\nConfiguration when creating Digital Ocean droplets is now always used.\n\nFix crash when using Working Copy from the share sheet."},{"version_id":"838356681","version_name":"4.4.6","version_date":"2020-10-25 04:26:02.000 +0800","version_description":"Improved GoGS authentication.\n\nFix problem where back button wasn't always shown on iPad.\n\nFix bug where internal rather than external IP address was sometimes read for Digitial Ocean droplets."},{"version_id":"838430533","version_name":"4.4.7","version_date":"2020-10-30 05:39:32.000 +0800","version_description":"Improved performance when editing on iPad with external keyboard.\n\nWhen importing GPG keys with multiple users the wrong user would sometimes be picked causing the commit signature to be invalid. Correct user is picked if you import the key again."},{"version_id":"838555451","version_name":"4.4.8","version_date":"2020-11-17 20:31:30.000 +0800","version_description":"Only datacenter regions available for new projects are shown when creating Digital Ocean droplets.\n\nButton to import new fonts at the top of font list for editor looks more like a button.\n\nFix missing back button on Signing Key screen on iPad."},{"version_id":"839314732","version_name":"4.4.9","version_date":"2020-11-23 18:05:02.000 +0800","version_description":"Open text files in Textastic from the context menu. You will be asked to pick the outermost Working Copy folder the first time to grant Textastic access but after this it should be much faster than using the share sheet. \n\nCompare to HEAD from context menu of commits. This is useful for comparing differences with other branches or old versions of a project."},{"version_id":"839454447","version_name":"4.5.0","version_date":"2020-12-03 15:23:37.000 +0800","version_description":"Drag \"Compare to HEAD\" dialog into a new window on iPad.\n\nContext menu for repository folders with more than 25 entries have a new \"Delete Content\" choice for deleting rather than collapsing the folder. This can be useful if you accidentally imported a large directory that would be hard to delete manually."},{"version_id":"839544217","version_name":"4.5.1","version_date":"2020-12-09 14:25:29.000 +0800","version_description":"Stash and Unstash from the context menu of repositories. This requires iOS 14 and Pro unlock purchased less than 12 months ago.\n\nWhen submodule configuration points to missing commit and clone would otherwise fail it will automatically fix HEAD to match current branch.\n\nFixed layout glitch when filtering branch list."},{"version_id":"839852372","version_name":"4.5.2","version_date":"2020-12-31 06:48:52.000 +0800","version_description":"History below Repository status & configuration includes commits for all branches.\n\nFixes error listing repositories on some BitBucket accounts."},{"version_id":"839956651","version_name":"4.5.4","version_date":"2021-01-18 22:03:57.000 +0800","version_description":"Commit dialog updated to make it easier to show changes and faster to make partial commits. \n\nTap checkbox to stage or unstage entire file and tap filename to show modified lines. Tap modified lines to select them or long tap or mouse-click and drag to start multi line selection. Stage and unstage selected lines with popup menu or with S and U on external keyboard.\n\nPreview is supported for xhtml files.\n\nNew Shortcuts \"Details of Repository Files\" action that takes one or more files and returns details about them including repository, path in repository, status and full path. This makes it easy to make logic based on file locations and works well with the Open Repository File action.\n\nPass in results from Get Repository Files or other actions producing files but note that many of these properties only make sense for files inside Working Copy and will be empty for outside files."},{"version_id":"840349169","version_name":"4.5.5","version_date":"2021-02-05 16:44:50.000 +0800","version_description":"Merge Branch action in Shortcuts app outputs information about what was done. It has a new Method parameter where you can switch to rebase, only allow fast-forward or simulate merge to get information about what would happen without changing repository. \n\nFixed excessive memory usage that prevented committing when saving through the sharesheet.\n\nDirectory creation in WebDAV server no longer fails when directory already existed.\n\nFix bug where following links from Markdown or HTML preview into submodules didn't always work.\n\nSymlinks created with \"Link from Clipboard\" point relatively."},{"version_id":"840395708","version_name":"4.5.7","version_date":"2021-02-15 21:22:13.000 +0800","version_description":"Disable Word Wrap in the editor and scroll text files horizontally. \n\nTap file mode in the upper right corner to change Word Wrap and other editor settings.\n\nThis requires iOS 14.4 or iPadOS 14.4"},{"version_id":"840565027","version_name":"4.5.8","version_date":"2021-02-22 18:00:29.000 +0800","version_description":"Fix bug where editing files containing Chinese characters with word wrap disabled could cause crashes or freezing.\n\nSyntax highlighting for GDScript."},{"version_id":"840659077","version_name":"4.5.9","version_date":"2021-03-01 16:06:53.000 +0800","version_description":"Update your repositories from Files app listings with Pull from the context menu.\n\nSSH Command and SSH Upload supports multi-step authentication requiring both public key and password.\n\nSupport email from settings respects default Mail app.\n\nFix bug where Commit prompt wasn't always shown when saving from share sheet."},{"version_id":"840741126","version_name":"4.6.0","version_date":"2021-03-08 21:04:08.000 +0800","version_description":"Fix bug where dragging repositories into folders would show error message for folder until next app launch.\n\nCreate files or directories starting with .git such as .github and have them appear right away. It still isn't possible to create files or directories named .git as this will damage your repository.\n\nFix problem where Save + Commit from share sheet wouldn't always commit."},{"version_id":"841086946","version_name":"4.6.3","version_date":"2021-03-27 10:05:38.000 +0800","version_description":"Nicer deletion of large repositories making it clear the app is busy.\n\nDigital Ocean droplet creation only allows images and plans supported by the selected region."},{"version_id":"841201616","version_name":"4.6.4","version_date":"2021-04-06 17:02:18.000 +0800","version_description":"Ignore configuration when .lfsconfig points at LFS server with non-https scheme.\n\nIt is possible to disable Push for submodule remotes.\n\nImprovements to fuzzy search of Markdown headlines."},{"version_id":"842477685","version_name":"4.7.2","version_date":"2021-06-03 15:50:08.000 +0800","version_description":"Fix crash when swiping or showing context menu for commit inside submodule."},{"version_id":"842926743","version_name":"4.7.5","version_date":"2021-07-03 17:00:44.000 +0800","version_description":"Fix problem where staging files from the commit dialog would sometimes uncheck files."},{"version_id":"843045693","version_name":"4.7.6","version_date":"2021-07-20 05:18:38.000 +0800","version_description":"Pick one of the last ten commit messages in commit dialog by tapping button to the left of summary field.\n\nPerformance improvements in commit dialog.\n\nImproved integration with Gitea hosting providers.\n\nCommits returned in Repository History action in Shortcuts app include parent commit identifiers."}]